{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/ERC165.sol",
    "3": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/ERC165.sol",
    "exportedSymbols": {
      "ERC165": [
        1227
      ],
      "IERC165": [
        2768
      ]
    },
    "id": 1228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1172,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/IERC165.sol",
        "file": "./IERC165.sol",
        "id": 1173,
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 2769,
        "src": "58:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1175,
              "name": "IERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2768,
              "src": "274:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC165_$2768",
                "typeString": "contract IERC165"
              }
            },
            "id": 1176,
            "nodeType": "InheritanceSpecifier",
            "src": "274:7:2"
          }
        ],
        "contractDependencies": [
          2768
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1174,
          "nodeType": "StructuredDocumentation",
          "src": "83:171:2",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."
        },
        "fullyImplemented": true,
        "id": 1227,
        "linearizedBaseContracts": [
          1227,
          2768
        ],
        "name": "ERC165",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1179,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC165",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "371:57:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1177,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "371:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783031666663396137",
              "id": 1178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "418:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33540519_by_1",
                "typeString": "int_const 33540519"
              },
              "value": "0x01ffc9a7"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1180,
              "nodeType": "StructuredDocumentation",
              "src": "435:82:2",
              "text": " @dev Mapping of interface ids to whether or not it's supported."
            },
            "id": 1184,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "522:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 1183,
              "keyType": {
                "id": 1181,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "530:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "522:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 1182,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "540:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1191,
              "nodeType": "Block",
              "src": "596:193:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1188,
                        "name": "_INTERFACE_ID_ERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "761:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1187,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1226,
                      "src": "742:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "742:40:2"
                }
              ]
            },
            "id": 1192,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:2"
            },
            "returnParameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:2"
            },
            "scope": 1227,
            "src": "581:208:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2767
            ],
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "1022:57:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1201,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "1039:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 1203,
                    "indexExpression": {
                      "id": 1202,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "1060:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1039:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1200,
                  "id": 1204,
                  "nodeType": "Return",
                  "src": "1032:40:2"
                }
              ]
            },
            "documentation": {
              "id": 1193,
              "nodeType": "StructuredDocumentation",
              "src": "795:139:2",
              "text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "998:8:2"
            },
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "966:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:20:2"
            },
            "returnParameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "1016:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:6:2"
            },
            "scope": 1227,
            "src": "939:140:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "1538:133:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1213,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1209,
                          "src": "1556:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1571:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "1556:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1583:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                          "typeString": "literal_string \"ERC165: invalid interface id\""
                        },
                        "value": "ERC165: invalid interface id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                          "typeString": "literal_string \"ERC165: invalid interface id\""
                        }
                      ],
                      "id": 1212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1548:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:66:2"
                },
                {
                  "expression": {
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1219,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1184,
                        "src": "1624:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 1221,
                      "indexExpression": {
                        "id": 1220,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "1645:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1624:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1660:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1624:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:40:2"
                }
              ]
            },
            "documentation": {
              "id": 1207,
              "nodeType": "StructuredDocumentation",
              "src": "1085:383:2",
              "text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
            },
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "1501:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1500:20:2"
            },
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:2"
            },
            "scope": 1227,
            "src": "1473:198:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1228,
        "src": "255:1418:2"
      }
    ],
    "src": "33:1641:2"
  },
  "bytecode": "608060405234801561001057600080fd5b506100216301ffc9a760e01b610026565b6100aa565b6001600160e01b03198082161415610085576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60ba806100b86000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b605160048036036020811015604157600080fd5b50356001600160e01b0319166065565b604080519115158252519081900360200190f35b6001600160e01b03191660009081526020819052604090205460ff169056fea2646970667358221220091e41067aa51e2e6bc98bda62a08e1abb175bc563b49c035f0e369af2f980a664736f6c63430007060033",
  "bytecodeSha1": "e1e53e2d0b284694ac4261c84fbc6543adf26077",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "ERC165",
  "coverageMap": {
    "branches": {
      "2": {},
      "3": {}
    },
    "statements": {
      "2": {
        "ERC165.supportsInterface": {
          "0": [
            1032,
            1072
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/IERC165"
  ],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b605160048036036020811015604157600080fd5b50356001600160e01b0319166065565b604080519115158252519081900360200190f35b6001600160e01b03191660009081526020819052604090205460ff169056fea2646970667358221220091e41067aa51e2e6bc98bda62a08e1abb175bc563b49c035f0e369af2f980a664736f6c63430007060033",
  "deployedSourceMap": "255:1418:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:140;;;;;;;;;;;;;;;;-1:-1:-1;939:140:2;-1:-1:-1;;;;;;939:140:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1039:33:2;1016:4;1039:33;;;;;;;;;;;;;;939:140::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "stateVariables": {
      "_supportedInterfaces": {
        "details": "Mapping of interface ids to whether or not it's supported."
      }
    },
    "version": 1
  },
  "offset": [
    255,
    1673
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x1E COINBASE MOD PUSH27 0xA51E2E6BC98BDA62A08E1ABB175BC563B49C035F0E369AF2F980A6 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "REVERT",
      "path": "2"
    },
    "15": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "POP",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "LT",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "24": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "27": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "SHR",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FFC9A7"
    },
    "36": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "EQ",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "40": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        255,
        1673
      ],
      "op": "REVERT",
      "path": "2"
    },
    "45": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "46": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x51"
    },
    "48": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "50": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "51": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "52": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SUB",
      "path": "2"
    },
    "53": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "55": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "56": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "LT",
      "path": "2"
    },
    "57": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "58": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x41"
    },
    "60": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "61": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "63": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "REVERT",
      "path": "2"
    },
    "65": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "66": {
      "op": "POP"
    },
    "67": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "68": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "70": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "72": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "74": {
      "op": "SHL"
    },
    "75": {
      "op": "SUB"
    },
    "76": {
      "op": "NOT"
    },
    "77": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "AND",
      "path": "2"
    },
    "78": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x65"
    },
    "80": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        939,
        1079
      ],
      "op": "JUMP",
      "path": "2"
    },
    "81": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "82": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "84": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "85": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "86": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "87": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "88": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "89": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "90": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "91": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "92": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "93": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "94": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "95": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SUB",
      "path": "2"
    },
    "96": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "98": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ADD",
      "path": "2"
    },
    "99": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "100": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "RETURN",
      "path": "2"
    },
    "101": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "106": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "108": {
      "op": "SHL"
    },
    "109": {
      "op": "SUB"
    },
    "110": {
      "op": "NOT"
    },
    "111": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "AND",
      "path": "2",
      "statement": 0
    },
    "112": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1016,
        1020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "114": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "115": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "116": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "117": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "119": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "120": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "121": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "122": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "124": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "125": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "126": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "127": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "129": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "AND",
      "path": "2"
    },
    "130": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "131": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        939,
        1079
      ],
      "op": "JUMP",
      "path": "2"
    }
  },
  "sha1": "6ba5dbc217c01bbe7299a2dd12541b88931ab39c",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal virtual {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n",
  "sourceMap": "255:1418:2:-:0;;;581:208;;;;;;;;;-1:-1:-1;742:40:2;-1:-1:-1;;;742:18:2;:40::i;:::-;255:1418;;1473:198;-1:-1:-1;;;;;;1556:25:2;;;;;1548:66;;;;;-1:-1:-1;;;1548:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1624:33:2;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1624:40:2;1660:4;1624:40;;;1473:198::o;255:1418::-;;;;;;;",
  "sourcePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/ERC165.sol",
  "type": "contract"
}