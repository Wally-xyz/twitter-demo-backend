{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/GSN/Context.sol",
    "10": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/Address.sol",
    "12": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/EnumerableMap.sol",
    "13": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/EnumerableSet.sol",
    "14": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/Strings.sol",
    "2": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/ERC165.sol",
    "3": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/IERC165.sol",
    "4": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/math/SafeMath.sol",
    "5": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/ERC721.sol",
    "6": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721.sol",
    "7": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721Enumerable.sol",
    "8": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721Metadata.sol",
    "9": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1819
      ],
      "Context": [
        1170
      ],
      "ERC165": [
        1227
      ],
      "ERC721": [
        1097
      ],
      "EnumerableMap": [
        2274
      ],
      "EnumerableSet": [
        2669
      ],
      "IERC165": [
        2768
      ],
      "IERC721": [
        1539
      ],
      "IERC721Enumerable": [
        1570
      ],
      "IERC721Metadata": [
        1597
      ],
      "IERC721Receiver": [
        1615
      ],
      "SafeMath": [
        1423
      ],
      "Strings": [
        2756
      ]
    },
    "id": 1098,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 168,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 169,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1171,
        "src": "58:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 170,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1540,
        "src": "90:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 171,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1598,
        "src": "114:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721Enumerable.sol",
        "file": "./IERC721Enumerable.sol",
        "id": 172,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1571,
        "src": "146:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1616,
        "src": "180:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/introspection/ERC165.sol",
        "file": "../../introspection/ERC165.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1228,
        "src": "212:40:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1424,
        "src": "253:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 176,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 1820,
        "src": "287:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/EnumerableSet.sol",
        "file": "../../utils/EnumerableSet.sol",
        "id": 177,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 2670,
        "src": "321:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/EnumerableMap.sol",
        "file": "../../utils/EnumerableMap.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 2275,
        "src": "361:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 1098,
        "sourceUnit": 2757,
        "src": "401:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 181,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1170,
              "src": "580:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$1170",
                "typeString": "contract Context"
              }
            },
            "id": 182,
            "nodeType": "InheritanceSpecifier",
            "src": "580:7:5"
          },
          {
            "baseName": {
              "id": 183,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1227,
              "src": "589:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$1227",
                "typeString": "contract ERC165"
              }
            },
            "id": 184,
            "nodeType": "InheritanceSpecifier",
            "src": "589:6:5"
          },
          {
            "baseName": {
              "id": 185,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1539,
              "src": "597:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$1539",
                "typeString": "contract IERC721"
              }
            },
            "id": 186,
            "nodeType": "InheritanceSpecifier",
            "src": "597:7:5"
          },
          {
            "baseName": {
              "id": 187,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1597,
              "src": "606:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$1597",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 188,
            "nodeType": "InheritanceSpecifier",
            "src": "606:15:5"
          },
          {
            "baseName": {
              "id": 189,
              "name": "IERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1570,
              "src": "623:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$1570",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "id": 190,
            "nodeType": "InheritanceSpecifier",
            "src": "623:17:5"
          }
        ],
        "contractDependencies": [
          1170,
          1227,
          1539,
          1570,
          1597,
          2768
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 180,
          "nodeType": "StructuredDocumentation",
          "src": "436:124:5",
          "text": " @title ERC721 Non-Fungible Token Standard basic implementation\n @dev see https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": true,
        "id": 1097,
        "linearizedBaseContracts": [
          1097,
          1570,
          1597,
          1539,
          1227,
          2768,
          1170
        ],
        "name": "ERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 193,
            "libraryName": {
              "id": 191,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1423,
              "src": "653:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "647:27:5",
            "typeName": {
              "id": 192,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 196,
            "libraryName": {
              "id": 194,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1819,
              "src": "685:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$1819",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "679:26:5",
            "typeName": {
              "id": 195,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 199,
            "libraryName": {
              "id": 197,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2669,
              "src": "716:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$2669",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "710:46:5",
            "typeName": {
              "id": 198,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2574,
              "src": "734:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$2574_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "id": 202,
            "libraryName": {
              "id": 200,
              "name": "EnumerableMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2274,
              "src": "767:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableMap_$2274",
                "typeString": "library EnumerableMap"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "761:55:5",
            "typeName": {
              "id": 201,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2099,
              "src": "785:30:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            }
          },
          {
            "id": 205,
            "libraryName": {
              "id": 203,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2756,
              "src": "827:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$2756",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "821:26:5",
            "typeName": {
              "id": 204,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "839:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 208,
            "mutability": "constant",
            "name": "_ERC721_RECEIVED",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1025:53:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 206,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1025:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783135306237613032",
              "id": 207,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1068:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_353073666_by_1",
                "typeString": "int_const 353073666"
              },
              "value": "0x150b7a02"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 212,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1162:64:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 211,
              "keyType": {
                "id": 209,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1171:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1162:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "id": 210,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2574,
                "src": "1182:21:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$2574_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 214,
            "mutability": "mutable",
            "name": "_tokenOwners",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1290:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
              "typeString": "struct EnumerableMap.UintToAddressMap"
            },
            "typeName": {
              "id": 213,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2099,
              "src": "1290:30:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 218,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1397:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 217,
              "keyType": {
                "id": 215,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1406:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1397:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 216,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1417:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 224,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1504:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 223,
              "keyType": {
                "id": 219,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1513:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1504:46:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 222,
                "keyType": {
                  "id": 220,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1533:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1524:25:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 221,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1544:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 226,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1602:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 225,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1602:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 228,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1649:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 227,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1649:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 232,
            "mutability": "mutable",
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1717:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 231,
              "keyType": {
                "id": 229,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1726:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1717:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 230,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1737:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 234,
            "mutability": "mutable",
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "1786:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 233,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1786:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 237,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "2685:57:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 235,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2685:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783830616335386364",
              "id": 236,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2732:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2158778573_by_1",
                "typeString": "int_const 2158778573"
              },
              "value": "0x80ac58cd"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 240,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "3008:66:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 238,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "3008:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783562356531333966",
              "id": 239,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3064:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 243,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
            "nodeType": "VariableDeclaration",
            "scope": 1097,
            "src": "3379:68:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 241,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "3379:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783738306539643633",
              "id": 242,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3437:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2014223715_by_1",
                "typeString": "int_const 2014223715"
              },
              "value": "0x780e9d63"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "3622:303:5",
              "statements": [
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 251,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "3632:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 252,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3640:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3632:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:12:5"
                },
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 255,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "3654:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 256,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3664:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3654:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3654:16:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 260,
                        "name": "_INTERFACE_ID_ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3777:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 259,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1226,
                      "src": "3758:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 264,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "3827:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 263,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1226,
                      "src": "3808:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3808:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3808:49:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "3886:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 267,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1226,
                      "src": "3867:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:51:5"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "3454:108:5",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 272,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "3580:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "3600:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3579:42:5"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3622:0:5"
            },
            "scope": 1097,
            "src": "3567:358:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1464
            ],
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4057:138:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 282,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "4075:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4092:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4084:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 283,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4084:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4075:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4096:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4067:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:74:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 291,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "4159:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "id": 292,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "4173:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4159:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$2574_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2648,
                      "src": "4159:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2574_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2574_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 280,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "4152:36:5"
                }
              ]
            },
            "documentation": {
              "id": 273,
              "nodeType": "StructuredDocumentation",
              "src": "3931:48:5",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4030:8:5"
            },
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4003:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4002:15:5"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4048:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:9:5"
            },
            "scope": 1097,
            "src": "3984:211:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1472
            ],
            "body": {
              "id": 313,
              "nodeType": "Block",
              "src": "4325:94:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 309,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "4359:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4368:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "expression": {
                        "id": 307,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4342:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2273,
                      "src": "4342:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$2099_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 306,
                  "id": 312,
                  "nodeType": "Return",
                  "src": "4335:77:5"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "4201:46:5",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 303,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4298:8:5"
            },
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "4269:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4269:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4268:17:5"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "4316:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4316:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4315:9:5"
            },
            "scope": 1097,
            "src": "4252:167:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1582
            ],
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "4542:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 321,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "4559:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 320,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "4552:12:5"
                }
              ]
            },
            "documentation": {
              "id": 315,
              "nodeType": "StructuredDocumentation",
              "src": "4425:51:5",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4509:8:5"
            },
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4494:2:5"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4527:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4527:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4526:15:5"
            },
            "scope": 1097,
            "src": "4481:90:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1588
            ],
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "4698:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 331,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "4715:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 330,
                  "id": 332,
                  "nodeType": "Return",
                  "src": "4708:14:5"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "4577:53:5",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4665:8:5"
            },
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4650:2:5"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "4683:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4682:15:5"
            },
            "scope": 1097,
            "src": "4635:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1596
            ],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "4875:660:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 345,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "4901:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 344,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "4893:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4893:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4911:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4885:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:76:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:76:5"
                },
                {
                  "assignments": [
                    351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 351,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "4972:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4972:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 355,
                  "initialValue": {
                    "baseExpression": {
                      "id": 352,
                      "name": "_tokenURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "4998:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 354,
                    "indexExpression": {
                      "id": 353,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "5009:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4998:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4972:45:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 358,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "5096:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5090:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 356,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5090:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5090:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5090:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5116:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5090:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 366,
                  "nodeType": "IfStatement",
                  "src": "5086:74:5",
                  "trueBody": {
                    "id": 365,
                    "nodeType": "Block",
                    "src": "5119:41:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 363,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 351,
                          "src": "5140:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 342,
                        "id": 364,
                        "nodeType": "Return",
                        "src": "5133:16:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 369,
                            "name": "_tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "5268:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5262:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 367,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5262:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5262:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5262:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5288:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5262:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "5258:110:5",
                  "trueBody": {
                    "id": 383,
                    "nodeType": "Block",
                    "src": "5291:77:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 378,
                                  "name": "_baseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 234,
                                  "src": "5336:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "id": 379,
                                  "name": "_tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "5346:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 376,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5319:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5319:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5319:37:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5312:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 374,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5312:6:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5312:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 342,
                        "id": 382,
                        "nodeType": "Return",
                        "src": "5305:52:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 389,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "5498:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 390,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 337,
                                "src": "5508:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2755,
                              "src": "5508:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5508:18:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 387,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5481:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5481:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5481:46:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5474:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5474:6:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5474:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 342,
                  "id": 395,
                  "nodeType": "Return",
                  "src": "5467:61:5"
                }
              ]
            },
            "documentation": {
              "id": 335,
              "nodeType": "StructuredDocumentation",
              "src": "4735:55:5",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 339,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4842:8:5"
            },
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4813:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4812:17:5"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4860:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4859:15:5"
            },
            "scope": 1097,
            "src": "4795:740:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "5822:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 403,
                    "name": "_baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 234,
                    "src": "5839:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 402,
                  "id": 404,
                  "nodeType": "Return",
                  "src": "5832:15:5"
                }
              ]
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "5541:221:5",
              "text": " @dev Returns the base URI set via {_setBaseURI}. This will be\n automatically added as a prefix in {tokenURI} to each token's URI, or\n to the token ID if no specific URI is set for that token ID."
            },
            "functionSelector": "6c0360eb",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5783:2:5"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "5807:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5807:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5806:15:5"
            },
            "scope": 1097,
            "src": "5767:87:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1561
            ],
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "6031:54:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 421,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "6072:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 417,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "6048:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 419,
                        "indexExpression": {
                          "id": 418,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "6062:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6048:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$2574_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2668,
                      "src": "6048:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2574_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2574_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6048:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 416,
                  "id": 423,
                  "nodeType": "Return",
                  "src": "6041:37:5"
                }
              ]
            },
            "documentation": {
              "id": 407,
              "nodeType": "StructuredDocumentation",
              "src": "5860:68:5",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
            },
            "functionSelector": "2f745c59",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 413,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6004:8:5"
            },
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "5962:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5962:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "5977:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5961:30:5"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "6022:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6022:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6021:9:5"
            },
            "scope": 1097,
            "src": "5933:152:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1551
            ],
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "6218:138:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 432,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "6328:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2182,
                      "src": "6328:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$2099_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6328:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 431,
                  "id": 435,
                  "nodeType": "Return",
                  "src": "6321:28:5"
                }
              ]
            },
            "documentation": {
              "id": 426,
              "nodeType": "StructuredDocumentation",
              "src": "6091:60:5",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 428,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6191:8:5"
            },
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6176:2:5"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "6209:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6209:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6208:9:5"
            },
            "scope": 1097,
            "src": "6156:200:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1569
            ],
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "6504:85:5",
              "statements": [
                {
                  "assignments": [
                    447,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 447,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "6515:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6515:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 452,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 450,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "6552:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 448,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "6536:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2218,
                      "src": "6536:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$2099_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_address_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (uint256,address)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6536:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6514:44:5"
                },
                {
                  "expression": {
                    "id": 453,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 447,
                    "src": "6575:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 445,
                  "id": 454,
                  "nodeType": "Return",
                  "src": "6568:14:5"
                }
              ]
            },
            "documentation": {
              "id": 438,
              "nodeType": "StructuredDocumentation",
              "src": "6362:61:5",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 442,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6477:8:5"
            },
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "6450:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6450:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6449:15:5"
            },
            "returnParameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "6495:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6495:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6494:9:5"
            },
            "scope": 1097,
            "src": "6428:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1500
            ],
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "6716:311:5",
              "statements": [
                {
                  "assignments": [
                    466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "6726:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 465,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6726:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 468,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "6750:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 467,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "6742:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6726:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 472,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "6776:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 473,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "6782:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6776:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6789:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6768:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6768:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "6768:57:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 479,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "6844:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6844:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 481,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "6860:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6844:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 484,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 466,
                              "src": "6886:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 485,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1158,
                                "src": "6893:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6893:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 483,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "6869:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6869:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6844:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6920:58:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6836:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6836:152:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "6836:152:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 493,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "7008:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 494,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "7012:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 492,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "6999:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6999:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "6999:21:5"
                }
              ]
            },
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "6595:46:5",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 463,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6707:8:5"
            },
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "6663:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6663:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "6675:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6675:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6662:29:5"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6716:0:5"
            },
            "scope": 1097,
            "src": "6646:381:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1508
            ],
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "7165:132:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 509,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "7191:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 508,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "7183:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7183:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7201:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7175:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:73:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "7175:73:5"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 514,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "7266:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 516,
                    "indexExpression": {
                      "id": 515,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "7282:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7266:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 506,
                  "id": 517,
                  "nodeType": "Return",
                  "src": "7259:31:5"
                }
              ]
            },
            "documentation": {
              "id": 499,
              "nodeType": "StructuredDocumentation",
              "src": "7033:50:5",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 503,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7138:8:5"
            },
            "parameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "7109:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7109:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7108:17:5"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "7156:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7156:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7155:9:5"
            },
            "scope": 1097,
            "src": "7088:209:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1516
            ],
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "7448:206:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 529,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "7466:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 530,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "7478:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7478:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7466:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7492:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7458:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7458:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "7458:62:5"
                },
                {
                  "expression": {
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 536,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 224,
                          "src": "7531:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 537,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "7550:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7550:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7531:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 541,
                      "indexExpression": {
                        "id": 539,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "7564:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7531:42:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 542,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "7576:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7531:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "7531:53:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 546,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1158,
                          "src": "7614:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7614:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 548,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "7628:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 549,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "7638:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 545,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "7599:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7599:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "EmitStatement",
                  "src": "7594:53:5"
                }
              ]
            },
            "documentation": {
              "id": 520,
              "nodeType": "StructuredDocumentation",
              "src": "7303:56:5",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7439:8:5"
            },
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7391:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7391:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7409:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7409:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7390:33:5"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7448:0:5"
            },
            "scope": 1097,
            "src": "7364:290:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1526
            ],
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "7815:59:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 564,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "7832:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 566,
                      "indexExpression": {
                        "id": 565,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "7851:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7832:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 568,
                    "indexExpression": {
                      "id": 567,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "7858:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7832:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 569,
                  "nodeType": "Return",
                  "src": "7825:42:5"
                }
              ]
            },
            "documentation": {
              "id": 554,
              "nodeType": "StructuredDocumentation",
              "src": "7660:55:5",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7791:8:5"
            },
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "7746:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7746:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "7761:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7745:33:5"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "7809:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7808:6:5"
            },
            "scope": 1097,
            "src": "7720:154:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1492
            ],
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "8025:211:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 584,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "8114:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8114:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 586,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "8128:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 583,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "8095:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8095:41:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8138:51:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8087:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8087:103:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "8087:103:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 592,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "8211:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 593,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "8217:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 594,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "8221:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 591,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "8201:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8201:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "8201:28:5"
                }
              ]
            },
            "documentation": {
              "id": 572,
              "nodeType": "StructuredDocumentation",
              "src": "7880:51:5",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 580,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8016:8:5"
            },
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "7958:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7958:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "7972:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7972:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "7984:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7984:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7957:43:5"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8025:0:5"
            },
            "scope": 1097,
            "src": "7936:300:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1482
            ],
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "8395:56:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 610,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "8422:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 611,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "8428:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 612,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "8432:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8441:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 609,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        617,
                        647
                      ],
                      "referencedDeclaration": 647,
                      "src": "8405:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8405:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "8405:39:5"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "8242:55:5",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8386:8:5"
            },
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "8328:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "8342:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8342:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "8354:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8354:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8327:43:5"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8395:0:5"
            },
            "scope": 1097,
            "src": "8302:149:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1538
            ],
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "8630:169:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 632,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "8667:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8667:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 634,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "8681:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 631,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "8648:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8648:41:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8691:51:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8640:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8640:103:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "8640:103:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 640,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "8767:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 641,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "8773:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 642,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 624,
                        "src": "8777:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 643,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "8786:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 639,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "8753:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8753:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "8753:39:5"
                }
              ]
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "8457:55:5",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 628,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8621:8:5"
            },
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "8543:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8543:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "8557:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8557:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "8569:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8569:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "8586:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8586:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8542:63:5"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8630:0:5"
            },
            "scope": 1097,
            "src": "8517:282:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "9763:166:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 660,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "9783:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 661,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "9789:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 662,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "9793:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 659,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "9773:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "9773:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 667,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "9842:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 668,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "9848:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 669,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 654,
                            "src": "9852:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 670,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "9861:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 666,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1063,
                          "src": "9819:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9819:48:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9869:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9811:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9811:111:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "9811:111:5"
                }
              ]
            },
            "documentation": {
              "id": 648,
              "nodeType": "StructuredDocumentation",
              "src": "8805:850:5",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mecanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "9683:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9683:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "9697:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9697:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "9709:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9709:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "9726:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9726:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9682:63:5"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9763:0:5"
            },
            "scope": 1097,
            "src": "9660:269:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 689,
              "nodeType": "Block",
              "src": "10295:54:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "10334:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 684,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "10312:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2168,
                      "src": "10312:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$2099_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10312:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 683,
                  "id": 688,
                  "nodeType": "Return",
                  "src": "10305:37:5"
                }
              ]
            },
            "documentation": {
              "id": 677,
              "nodeType": "StructuredDocumentation",
              "src": "9935:292:5",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "10249:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10249:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10248:17:5"
            },
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "10289:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10289:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10288:6:5"
            },
            "scope": 1097,
            "src": "10232:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "10598:238:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 702,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "10624:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 701,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "10616:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10616:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10634:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10608:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10608:73:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "10608:73:5"
                },
                {
                  "assignments": [
                    708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 708,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 729,
                      "src": "10691:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 707,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10691:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 712,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "10715:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 709,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "10707:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10707:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10691:32:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 713,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "10741:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 714,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "10752:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10741:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 717,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 695,
                                  "src": "10773:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 716,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 519,
                                "src": "10761:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10761:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 719,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "10785:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10761:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10741:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 723,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "10813:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 724,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "10820:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 722,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "10796:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10796:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10741:87:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 727,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10740:89:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 699,
                  "id": 728,
                  "nodeType": "Return",
                  "src": "10733:96:5"
                }
              ]
            },
            "documentation": {
              "id": 691,
              "nodeType": "StructuredDocumentation",
              "src": "10355:147:5",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "10535:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10535:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "10552:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10552:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10534:34:5"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "10592:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10592:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10591:6:5"
            },
            "scope": 1097,
            "src": "10507:329:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "11232:43:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 739,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "11252:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 740,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "11256:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11265:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 738,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        745,
                        774
                      ],
                      "referencedDeclaration": 774,
                      "src": "11242:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11242:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "11242:26:5"
                }
              ]
            },
            "documentation": {
              "id": 731,
              "nodeType": "StructuredDocumentation",
              "src": "10842:320:5",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\nd*\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "11186:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11186:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "11198:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11198:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11185:29:5"
            },
            "returnParameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11232:0:5"
            },
            "scope": 1097,
            "src": "11167:108:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "11581:162:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "11597:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 757,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "11601:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 755,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "11591:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11591:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "11591:18:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11658:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11650:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 762,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11650:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11650:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 766,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "11662:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 767,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "11666:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 768,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "11675:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 761,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1063,
                          "src": "11627:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11627:54:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11683:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11619:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11619:117:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "11619:117:5"
                }
              ]
            },
            "documentation": {
              "id": 746,
              "nodeType": "StructuredDocumentation",
              "src": "11281:210:5",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "11515:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11515:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "11527:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11527:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "11544:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11544:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11514:49:5"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11581:0:5"
            },
            "scope": 1097,
            "src": "11496:247:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 832,
              "nodeType": "Block",
              "src": "12126:332:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 783,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "12144:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12158:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12150:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 784,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12150:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12150:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "12144:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12162:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12136:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12136:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "12136:61:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12215:17:5",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 794,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "12224:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 793,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "12216:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12216:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12234:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12207:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12207:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "12207:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12305:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12297:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12297:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12297:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 805,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "12309:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 806,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "12313:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 800,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "12276:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12276:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "12276:45:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 813,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "12354:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 809,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "12332:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 811,
                        "indexExpression": {
                          "id": 810,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "12346:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12332:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$2574_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2594,
                      "src": "12332:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$2574_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2574_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12332:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "12332:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 819,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "12390:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 820,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "12399:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 816,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "12373:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 818,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2128,
                      "src": "12373:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2099_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12373:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "12373:29:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12435:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12427:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 824,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12427:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12427:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 828,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "12439:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 829,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "12443:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 823,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "12418:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12418:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "EmitStatement",
                  "src": "12413:38:5"
                }
              ]
            },
            "documentation": {
              "id": 775,
              "nodeType": "StructuredDocumentation",
              "src": "11749:311:5",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "12080:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12080:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "12092:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12092:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12079:29:5"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12126:0:5"
            },
            "scope": 1097,
            "src": "12065:393:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 900,
              "nodeType": "Block",
              "src": "12724:453:5",
              "statements": [
                {
                  "assignments": [
                    840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 840,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 900,
                      "src": "12734:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 839,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12734:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 842,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "12758:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "12750:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12750:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12734:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 846,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "12798:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12813:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12805:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 847,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12805:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12805:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 851,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "12817:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 845,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "12777:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12777:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "12777:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12880:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12872:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12872:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12872:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 859,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "12884:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 854,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "12863:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12863:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "12863:29:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 864,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "12948:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 866,
                            "indexExpression": {
                              "id": 865,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "12959:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12948:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12942:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 862,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "12942:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12942:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12942:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12979:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12942:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 877,
                  "nodeType": "IfStatement",
                  "src": "12938:95:5",
                  "trueBody": {
                    "id": 876,
                    "nodeType": "Block",
                    "src": "12982:51:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12996:26:5",
                          "subExpression": {
                            "baseExpression": {
                              "id": 871,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "13003:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 873,
                            "indexExpression": {
                              "id": 872,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "13014:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13003:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 875,
                        "nodeType": "ExpressionStatement",
                        "src": "12996:26:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 882,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "13071:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 878,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "13043:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 880,
                        "indexExpression": {
                          "id": 879,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "13057:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13043:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$2574_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2614,
                      "src": "13043:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$2574_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2574_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13043:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "13043:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 888,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "13110:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 885,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "13090:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2148,
                      "src": "13090:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2099_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13090:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "13090:28:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 892,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "13143:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13158:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13150:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13150:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13150:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 897,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "13162:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 891,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "13134:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13134:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "EmitStatement",
                  "src": "13129:41:5"
                }
              ]
            },
            "documentation": {
              "id": 834,
              "nodeType": "StructuredDocumentation",
              "src": "12464:206:5",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 901,
                  "src": "12690:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12690:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12689:17:5"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12724:0:5"
            },
            "scope": 1097,
            "src": "12675:502:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 971,
              "nodeType": "Block",
              "src": "13580:480:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 913,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "13606:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 912,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "13598:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13598:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 915,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "13618:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13598:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13624:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13590:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13590:78:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "13590:78:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 921,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 906,
                          "src": "13686:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13700:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13692:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 922,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13692:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13692:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "13686:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13704:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13678:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13678:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "13678:65:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 931,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "13775:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 932,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "13781:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 933,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "13785:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 930,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "13754:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13754:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "13754:39:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13872:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13864:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 937,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13864:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13864:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 941,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "13876:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 936,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "13855:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13855:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "13855:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 948,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "13922:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 944,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "13895:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 946,
                        "indexExpression": {
                          "id": 945,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "13909:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13895:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$2574_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2614,
                      "src": "13895:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$2574_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2574_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13895:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "13895:35:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 955,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "13962:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 951,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "13940:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2574_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 953,
                        "indexExpression": {
                          "id": 952,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 906,
                          "src": "13954:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13940:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$2574_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2594,
                      "src": "13940:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$2574_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2574_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13940:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "13940:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 961,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "13998:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 962,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "14007:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 958,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "13981:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$2099_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2128,
                      "src": "13981:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2099_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2099_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13981:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "13981:29:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 966,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "14035:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 967,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "14041:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 968,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "14045:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 965,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "14026:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14026:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "EmitStatement",
                  "src": "14021:32:5"
                }
              ]
            },
            "documentation": {
              "id": 902,
              "nodeType": "StructuredDocumentation",
              "src": "13183:313:5",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 972,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "13520:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13520:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "13534:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13534:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "13546:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13546:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13519:43:5"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13580:0:5"
            },
            "scope": 1097,
            "src": "13501:559:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "14288:131:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 982,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "14314:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 981,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "14306:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14306:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14324:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI set of nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        }
                      ],
                      "id": 980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14298:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14298:73:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "14298:73:5"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 987,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "14381:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 989,
                      "indexExpression": {
                        "id": 988,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "14392:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14381:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 990,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "14403:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "14381:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "14381:31:5"
                }
              ]
            },
            "documentation": {
              "id": 973,
              "nodeType": "StructuredDocumentation",
              "src": "14066:136:5",
              "text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "14229:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14229:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "14246:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14246:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14228:42:5"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14288:0:5"
            },
            "scope": 1097,
            "src": "14207:212:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "14704:36:5",
              "statements": [
                {
                  "expression": {
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1000,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "14714:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1001,
                      "name": "baseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "14725:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "14714:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "14714:19:5"
                }
              ]
            },
            "documentation": {
              "id": 995,
              "nodeType": "StructuredDocumentation",
              "src": "14425:212:5",
              "text": " @dev Internal function to set the base URI for all token IDs. It is\n automatically added as a prefix to the value returned in {tokenURI},\n or to the token ID if {tokenURI} is empty."
            },
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "baseURI_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "14663:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14663:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14662:24:5"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14704:0:5"
            },
            "scope": 1097,
            "src": "14642:98:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1062,
              "nodeType": "Block",
              "src": "15423:459:5",
              "statements": [
                {
                  "condition": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15437:16:5",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1019,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "15438:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1644,
                        "src": "15438:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15438:15:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1026,
                  "nodeType": "IfStatement",
                  "src": "15433:58:5",
                  "trueBody": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "15455:36:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15476:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1018,
                        "id": 1024,
                        "nodeType": "Return",
                        "src": "15469:11:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1028,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 1062,
                      "src": "15500:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1027,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15500:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1046,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1034,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1010,
                                    "src": "15594:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1033,
                                  "name": "IERC721Receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1615,
                                  "src": "15578:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1615_$",
                                    "typeString": "type(contract IERC721Receiver)"
                                  }
                                },
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15578:19:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Receiver_$1615",
                                  "typeString": "contract IERC721Receiver"
                                }
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "onERC721Received",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1614,
                              "src": "15578:36:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15578:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1038,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "15637:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15637:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 1040,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "15663:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1041,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "15681:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1042,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1014,
                            "src": "15702:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1031,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15542:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15542:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15542:175:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15719:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 1029,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "15526:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1715,
                      "src": "15526:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15526:246:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15500:272:5"
                },
                {
                  "assignments": [
                    1048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1048,
                      "mutability": "mutable",
                      "name": "retval",
                      "nodeType": "VariableDeclaration",
                      "scope": 1062,
                      "src": "15782:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1047,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "15782:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1056,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1051,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1028,
                        "src": "15809:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15822:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes4_$",
                              "typeString": "type(bytes4)"
                            },
                            "typeName": {
                              "id": 1052,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "15822:6:5",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 1054,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15821:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        }
                      ],
                      "expression": {
                        "id": 1049,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15798:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "15798:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15798:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15782:48:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1057,
                          "name": "retval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "15848:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1058,
                          "name": "_ERC721_RECEIVED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "15858:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "15848:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1060,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15847:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1018,
                  "id": 1061,
                  "nodeType": "Return",
                  "src": "15840:35:5"
                }
              ]
            },
            "documentation": {
              "id": 1006,
              "nodeType": "StructuredDocumentation",
              "src": "14746:542:5",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "15325:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15325:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "15339:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15339:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "15351:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15351:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "15368:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15368:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15324:63:5"
            },
            "returnParameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "15413:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15413:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15412:6:5"
            },
            "scope": 1097,
            "src": "15293:589:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "15943:100:5",
              "statements": [
                {
                  "expression": {
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1070,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "15953:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1072,
                      "indexExpression": {
                        "id": 1071,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "15969:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15953:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1073,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "15980:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15953:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "15953:29:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1078,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "16014:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1077,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "16006:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16006:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1080,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "16024:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "16028:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1076,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "15997:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15997:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "EmitStatement",
                  "src": "15992:44:5"
                }
              ]
            },
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "15906:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15906:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "15918:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15918:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15905:29:5"
            },
            "returnParameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15943:0:5"
            },
            "scope": 1097,
            "src": "15888:155:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "16729:3:5",
              "statements": []
            },
            "documentation": {
              "id": 1086,
              "nodeType": "StructuredDocumentation",
              "src": "16049:585:5",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "16669:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16669:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "16683:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16683:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "16695:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16695:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16668:43:5"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16729:0:5"
            },
            "scope": 1097,
            "src": "16639:93:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1098,
        "src": "561:16173:5"
      }
    ],
    "src": "33:16702:5"
  },
  "bytecode": "",
  "bytecodeSha1": "bae840404ebedff32713cd52ec7e7a807017af3f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {},
      "10": {
        "Address._functionCallWithValue": {
          "102": [
            5279,
            5297,
            true
          ],
          "103": [
            5493,
            5500,
            false
          ],
          "104": [
            5634,
            5655,
            false
          ]
        }
      },
      "12": {
        "EnumerableMap._at": {
          "105": [
            5037,
            5064,
            true
          ]
        },
        "EnumerableMap._get": {
          "106": [
            5782,
            5795,
            true
          ]
        },
        "EnumerableMap._set": {
          "107": [
            2069,
            2082,
            false
          ]
        }
      },
      "13": {
        "EnumerableSet._add": {
          "110": [
            1695,
            1716,
            false
          ]
        },
        "EnumerableSet._at": {
          "108": [
            4517,
            4543,
            true
          ]
        },
        "EnumerableSet._remove": {
          "109": [
            2420,
            2435,
            false
          ]
        }
      },
      "14": {
        "Strings.toString": {
          "111": [
            475,
            485,
            false
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "ERC721._checkOnERC721Received": {
          "101": [
            15438,
            15453,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "97": [
            10616,
            10632,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "100": [
            9819,
            9867,
            true
          ]
        },
        "ERC721._transfer": {
          "98": [
            13598,
            13622,
            true
          ],
          "99": [
            13686,
            13702,
            true
          ]
        },
        "ERC721.approve": {
          "88": [
            6776,
            6787,
            true
          ],
          "89": [
            6844,
            6865,
            true
          ],
          "90": [
            6869,
            6906,
            true
          ]
        },
        "ERC721.balanceOf": {
          "92": [
            4075,
            4094,
            true
          ]
        },
        "ERC721.getApproved": {
          "87": [
            7183,
            7199,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "94": [
            8648,
            8689,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "93": [
            7466,
            7490,
            true
          ]
        },
        "ERC721.tokenURI": {
          "95": [
            4893,
            4909,
            true
          ],
          "96": [
            5262,
            5289,
            false
          ]
        },
        "ERC721.transferFrom": {
          "91": [
            8095,
            8136,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "28": [
            670,
            687
          ]
        }
      },
      "10": {
        "Address._functionCallWithValue": {
          "84": [
            5271,
            5331
          ],
          "85": [
            5516,
            5533
          ],
          "86": [
            6024,
            6044
          ]
        },
        "Address.functionCall": {
          "83": [
            3897,
            3957
          ]
        },
        "Address.isContract": {
          "82": [
            1270,
            1321
          ]
        }
      },
      "12": {
        "EnumerableMap._at": {
          "60": [
            5029,
            5103
          ],
          "61": [
            5168,
            5201
          ]
        },
        "EnumerableMap._contains": {
          "66": [
            4357,
            4386
          ]
        },
        "EnumerableMap._get": {
          "62": [
            5774,
            5810
          ],
          "63": [
            5856,
            5896
          ]
        },
        "EnumerableMap._length": {
          "54": [
            4558,
            4584
          ]
        },
        "EnumerableMap._set": {
          "77": [
            2135,
            2192
          ],
          "78": [
            2327,
            2366
          ],
          "79": [
            2380,
            2391
          ],
          "80": [
            2422,
            2463
          ],
          "81": [
            2477,
            2489
          ]
        },
        "EnumerableMap.contains": {
          "53": [
            6891,
            6933
          ]
        },
        "EnumerableMap.get": {
          "43": [
            8241,
            8310
          ]
        },
        "EnumerableMap.length": {
          "31": [
            7111,
            7137
          ]
        },
        "EnumerableMap.set": {
          "57": [
            6344,
            6406
          ]
        }
      },
      "13": {
        "EnumerableSet._add": {
          "73": [
            1732,
            1755
          ],
          "74": [
            1890,
            1930
          ],
          "75": [
            1944,
            1955
          ],
          "76": [
            1986,
            1998
          ]
        },
        "EnumerableSet._at": {
          "58": [
            4509,
            4582
          ],
          "59": [
            4592,
            4617
          ]
        },
        "EnumerableSet._remove": {
          "67": [
            3245,
            3283
          ],
          "68": [
            3349,
            3392
          ],
          "69": [
            3498,
            3515
          ],
          "70": [
            3583,
            3609
          ],
          "71": [
            3624,
            3635
          ],
          "72": [
            3666,
            3678
          ]
        },
        "EnumerableSet.add": {
          "56": [
            6550,
            6589
          ]
        },
        "EnumerableSet.at": {
          "42": [
            7739,
            7777
          ]
        },
        "EnumerableSet.remove": {
          "55": [
            6850,
            6892
          ]
        }
      },
      "14": {
        "Strings.toString": {
          "46": [
            501,
            511
          ],
          "47": [
            617,
            625
          ],
          "48": [
            639,
            649
          ],
          "49": [
            754,
            766
          ],
          "50": [
            808,
            853
          ],
          "51": [
            867,
            877
          ],
          "52": [
            897,
            918
          ]
        }
      },
      "2": {
        "ERC165.supportsInterface": {
          "0": [
            1032,
            1072
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "ERC721._approve": {
          "29": [
            15953,
            15982
          ],
          "30": [
            15992,
            16036
          ]
        },
        "ERC721._checkOnERC721Received": {
          "64": [
            15469,
            15480
          ],
          "65": [
            15840,
            15875
          ]
        },
        "ERC721._exists": {
          "27": [
            10305,
            10342
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "32": [
            10608,
            10681
          ],
          "33": [
            10733,
            10829
          ]
        },
        "ERC721._safeTransfer": {
          "44": [
            9773,
            9801
          ],
          "45": [
            9811,
            9922
          ]
        },
        "ERC721._transfer": {
          "34": [
            13590,
            13668
          ],
          "35": [
            13678,
            13743
          ],
          "36": [
            13754,
            13793
          ],
          "37": [
            13855,
            13884
          ],
          "38": [
            13895,
            13930
          ],
          "39": [
            13940,
            13970
          ],
          "40": [
            13981,
            14010
          ],
          "41": [
            14021,
            14053
          ]
        },
        "ERC721.approve": {
          "4": [
            6768,
            6825
          ],
          "5": [
            6836,
            6988
          ],
          "6": [
            6999,
            7020
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            4067,
            4141
          ],
          "15": [
            4152,
            4188
          ]
        },
        "ERC721.baseURI": {
          "13": [
            5832,
            5847
          ]
        },
        "ERC721.getApproved": {
          "2": [
            7175,
            7248
          ],
          "3": [
            7259,
            7290
          ]
        },
        "ERC721.isApprovedForAll": {
          "26": [
            7825,
            7867
          ]
        },
        "ERC721.name": {
          "1": [
            4552,
            4564
          ]
        },
        "ERC721.ownerOf": {
          "12": [
            4335,
            4412
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            8405,
            8444
          ],
          "20": [
            8640,
            8743
          ],
          "21": [
            8753,
            8792
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            7458,
            7520
          ],
          "18": [
            7531,
            7584
          ],
          "19": [
            7594,
            7647
          ]
        },
        "ERC721.symbol": {
          "16": [
            4708,
            4722
          ]
        },
        "ERC721.tokenOfOwnerByIndex": {
          "10": [
            6041,
            6078
          ]
        },
        "ERC721.tokenURI": {
          "22": [
            4885,
            4961
          ],
          "23": [
            5133,
            5149
          ],
          "24": [
            5305,
            5357
          ],
          "25": [
            5467,
            5528
          ]
        },
        "ERC721.totalSupply": {
          "7": [
            6321,
            6349
          ]
        },
        "ERC721.transferFrom": {
          "8": [
            8087,
            8190
          ],
          "9": [
            8201,
            8229
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/Address",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/Context",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/ERC165",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/EnumerableMap",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/IERC165",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/IERC721",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b5035610549565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ab565b005b610237610686565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b03813581169160208101359091169060400135610697565b6102376004803603604081101561029557600080fd5b506001600160a01b0381351690602001356106ee565b61022d600480360360608110156102c157600080fd5b506001600160a01b03813581169160208101359091169060400135610719565b610237600480360360208110156102f757600080fd5b5035610734565b6101e56004803603602081101561031457600080fd5b503561074a565b610153610772565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166107d3565b61015361083b565b61022d6004803603604081101561036757600080fd5b506001600160a01b038135169060200135151561089c565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109a1945050505050565b6101536004803603602081101561045b57600080fd5b50356109ff565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610ca4565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600061055482610cd2565b61058f5760405162461bcd60e51b815260040180806020018281038252602c8152602001806118c7602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105b68261074a565b9050806001600160a01b0316836001600160a01b031614156106095760405162461bcd60e51b815260040180806020018281038252602181526020018061194b6021913960400191505060405180910390fd5b806001600160a01b031661061b610cdf565b6001600160a01b0316148061063c575061063c81610637610cdf565b610ca4565b6106775760405162461bcd60e51b815260040180806020018281038252603881526020018061181a6038913960400191505060405180910390fd5b6106818383610ce3565b505050565b60006106926002610d51565b905090565b6106a86106a2610cdf565b82610d5c565b6106e35760405162461bcd60e51b815260040180806020018281038252603181526020018061196c6031913960400191505060405180910390fd5b610681838383610e00565b6001600160a01b03821660009081526001602052604081206107109083610f4c565b90505b92915050565b610681838383604051806020016040528060008152506109a1565b600080610742600284610f58565b509392505050565b60006107138260405180606001604052806029815260200161187c6029913960029190610f74565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b03821661081a5760405162461bcd60e51b815260040180806020018281038252602a815260200180611852602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061071390610d51565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6108a4610cdf565b6001600160a01b0316826001600160a01b0316141561090a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610917610cdf565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561095b610cdf565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6109b26109ac610cdf565b83610d5c565b6109ed5760405162461bcd60e51b815260040180806020018281038252603181526020018061196c6031913960400191505060405180910390fd5b6109f984848484610f8b565b50505050565b6060610a0a82610cd2565b610a455760405162461bcd60e51b815260040180806020018281038252602f81526020018061191c602f913960400191505060405180910390fd5b60008281526008602090815260408083208054825160026001831615610100026000190190921691909104601f810185900485028201850190935282815292909190830182828015610ad85780601f10610aad57610100808354040283529160200191610ad8565b820191906000526020600020905b815481529060010190602001808311610abb57829003601f168201915b505060095493945050505060026000196101006001841615020190911604610b015790506104ae565b805115610bd2576009816040516020018083805460018160011615610100020316600290048015610b695780601f10610b47576101008083540402835291820191610b69565b820191906000526020600020905b815481529060010190602001808311610b55575b5050825160208401908083835b60208310610b955780518252601f199092019160209182019101610b76565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104ae565b6009610bdd84610fdd565b6040516020018083805460018160011615610100020316600290048015610c3b5780601f10610c19576101008083540402835291820191610c3b565b820191906000526020600020905b815481529060010190602001808311610c27575b5050825160208401908083835b60208310610c675780518252601f199092019160209182019101610c48565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006107136002836110b8565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d188261074a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610713826110c4565b6000610d6782610cd2565b610da25760405162461bcd60e51b815260040180806020018281038252602c8152602001806117ee602c913960400191505060405180910390fd5b6000610dad8361074a565b9050806001600160a01b0316846001600160a01b03161480610de85750836001600160a01b0316610ddd84610549565b6001600160a01b0316145b80610df85750610df88185610ca4565b949350505050565b826001600160a01b0316610e138261074a565b6001600160a01b031614610e585760405162461bcd60e51b81526004018080602001828103825260298152602001806118f36029913960400191505060405180910390fd5b6001600160a01b038216610e9d5760405162461bcd60e51b81526004018080602001828103825260248152602001806117ca6024913960400191505060405180910390fd5b610ea8838383610681565b610eb3600082610ce3565b6001600160a01b0383166000908152600160205260409020610ed590826110c8565b506001600160a01b0382166000908152600160205260409020610ef890826110d4565b50610f05600282846110e0565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061071083836110f6565b6000808080610f67868661115a565b9097909650945050505050565b6000610f818484846111d5565b90505b9392505050565b610f96848484610e00565b610fa28484848461129f565b6109f95760405162461bcd60e51b81526004018080602001828103825260328152602001806117986032913960400191505060405180910390fd5b60608161100257506040805180820190915260018152600360fc1b60208201526104ae565b8160005b811561101a57600101600a82049150611006565b60008167ffffffffffffffff8111801561103357600080fd5b506040519080825280601f01601f19166020018201604052801561105e576020820181803683370190505b50859350905060001982015b83156110af57600a840660300160f81b8282806001900393508151811061108d57fe5b60200101906001600160f81b031916908160001a905350600a8404935061106a565b50949350505050565b60006107108383611407565b5490565b6000610710838361141f565b600061071083836114e5565b6000610f8184846001600160a01b03851661152f565b815460009082106111385760405162461bcd60e51b81526004018080602001828103825260228152602001806117766022913960400191505060405180910390fd5b82600001828154811061114757fe5b9060005260206000200154905092915050565b81546000908190831061119e5760405162461bcd60e51b81526004018080602001828103825260228152602001806118a56022913960400191505060405180910390fd5b60008460000184815481106111af57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816112705760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561123557818101518382015260200161121d565b50505050905090810190601f1680156112625780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061128357fe5b9060005260206000209060020201600101549150509392505050565b60006112b3846001600160a01b03166115c6565b6112bf57506001610df8565b60006113cd630a85bd0160e11b6112d4610cdf565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561133b578181015183820152602001611323565b50505050905090810190601f1680156113685780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001611798603291396001600160a01b03881691906115ff565b905060008180602001905160208110156113e657600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156114db578354600019808301919081019060009087908390811061145257fe5b906000526020600020015490508087600001848154811061146f57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061149f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610713565b6000915050610713565b60006114f18383611407565b61152757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610713565b506000610713565b600082815260018401602052604081205480611594575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f84565b828560000160018303815481106115a757fe5b9060005260206000209060020201600101819055506000915050610f84565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610df8575050151592915050565b6060610f8184846000856060611614856115c6565b611665576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106116a35780518252601f199092019160209182019101611684565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b5091509150811561171e579150610df89050565b80511561172e5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561123557818101518382015260200161121d56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212207c422930c5771dd327737020f970b61ed8485d3bc8667bc26f79dbbfdd43a56e64736f6c63430007060033",
  "deployedSourceMap": "561:16173:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:140:2;;;;;;;;;;;;;;;;-1:-1:-1;939:140:2;-1:-1:-1;;;;;;939:140:2;;:::i;:::-;;;;;;;;;;;;;;;;;;4481:90:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7088:209;;;;;;;;;;;;;;;;-1:-1:-1;7088:209:5;;:::i;:::-;;;;-1:-1:-1;;;;;7088:209:5;;;;;;;;;;;;;;6646:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6646:381:5;;;;;;;;:::i;:::-;;6156:200;;;:::i;:::-;;;;;;;;;;;;;;;;7936:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7936:300:5;;;;;;;;;;;;;;;;;:::i;5933:152::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5933:152:5;;;;;;;;:::i;8302:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8302:149:5;;;;;;;;;;;;;;;;;:::i;6428:161::-;;;;;;;;;;;;;;;;-1:-1:-1;6428:161:5;;:::i;4252:167::-;;;;;;;;;;;;;;;;-1:-1:-1;4252:167:5;;:::i;5767:87::-;;;:::i;3984:211::-;;;;;;;;;;;;;;;;-1:-1:-1;3984:211:5;-1:-1:-1;;;;;3984:211:5;;:::i;4635:94::-;;;:::i;7364:290::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7364:290:5;;;;;;;;;;:::i;8517:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8517:282:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8517:282:5;;-1:-1:-1;8517:282:5;;-1:-1:-1;;;;;8517:282:5:i;4795:740::-;;;;;;;;;;;;;;;;-1:-1:-1;4795:740:5;;:::i;7720:154::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7720:154:5;;;;;;;;;;:::i;939:140:2:-;-1:-1:-1;;;;;;1039:33:2;;1016:4;1039:33;;;;;;;;;;;;;939:140;;;;:::o;4481:90:5:-;4559:5;4552:12;;;;;;;;-1:-1:-1;;4552:12:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4527:13;;4552:12;;4559:5;;4552:12;;4559:5;4552:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4481:90;:::o;7088:209::-;7156:7;7183:16;7191:7;7183;:16::i;:::-;7175:73;;;;-1:-1:-1;;;7175:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7266:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;7266:24:5;;7088:209::o;6646:381::-;6726:13;6742:16;6750:7;6742;:16::i;:::-;6726:32;;6782:5;-1:-1:-1;;;;;6776:11:5;:2;-1:-1:-1;;;;;6776:11:5;;;6768:57;;;;-1:-1:-1;;;6768:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6860:5;-1:-1:-1;;;;;6844:21:5;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6844:21:5;;:62;;;;6869:37;6886:5;6893:12;:10;:12::i;:::-;6869:16;:37::i;:::-;6836:152;;;;-1:-1:-1;;;6836:152:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6999:21;7008:2;7012:7;6999:8;:21::i;:::-;6646:381;;;:::o;6156:200::-;6209:7;6328:21;:12;:19;:21::i;:::-;6321:28;;6156:200;:::o;7936:300::-;8095:41;8114:12;:10;:12::i;:::-;8128:7;8095:18;:41::i;:::-;8087:103;;;;-1:-1:-1;;;8087:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8201:28;8211:4;8217:2;8221:7;8201:9;:28::i;5933:152::-;-1:-1:-1;;;;;6048:20:5;;6022:7;6048:20;;;:13;:20;;;;;:30;;6072:5;6048:23;:30::i;:::-;6041:37;;5933:152;;;;;:::o;8302:149::-;8405:39;8422:4;8428:2;8432:7;8405:39;;;;;;;;;;;;:16;:39::i;6428:161::-;6495:7;;6536:22;:12;6552:5;6536:15;:22::i;:::-;-1:-1:-1;6514:44:5;6428:161;-1:-1:-1;;;6428:161:5:o;4252:167::-;4316:7;4342:70;4359:7;4342:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;5767:87::-;5839:8;5832:15;;;;;;;;-1:-1:-1;;5832:15:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5807:13;;5832:15;;5839:8;;5832:15;;5839:8;5832:15;;;;;;;;;;;;;;;;;;;;;;;;3984:211;4048:7;-1:-1:-1;;;;;4075:19:5;;4067:74;;;;-1:-1:-1;;;4067:74:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4159:20:5;;;;;;:13;:20;;;;;:29;;:27;:29::i;4635:94::-;4715:7;4708:14;;;;;;;;-1:-1:-1;;4708:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4683:13;;4708:14;;4715:7;;4708:14;;4715:7;4708:14;;;;;;;;;;;;;;;;;;;;;;;;7364:290;7478:12;:10;:12::i;:::-;-1:-1:-1;;;;;7466:24:5;:8;-1:-1:-1;;;;;7466:24:5;;;7458:62;;;;;-1:-1:-1;;;7458:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;7576:8;7531:18;:32;7550:12;:10;:12::i;:::-;-1:-1:-1;;;;;7531:32:5;;;;;;;;;;;;;;;;;-1:-1:-1;7531:32:5;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7531:53:5;;;;;;;;;;;7614:12;:10;:12::i;:::-;-1:-1:-1;;;;;7599:48:5;;7638:8;7599:48;;;;;;;;;;;;;;;;;;;;7364:290;;:::o;8517:282::-;8648:41;8667:12;:10;:12::i;:::-;8681:7;8648:18;:41::i;:::-;8640:103;;;;-1:-1:-1;;;8640:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8753:39;8767:4;8773:2;8777:7;8786:5;8753:13;:39::i;:::-;8517:282;;;;:::o;4795:740::-;4860:13;4893:16;4901:7;4893;:16::i;:::-;4885:76;;;;-1:-1:-1;;;4885:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:23;4998:19;;;:10;:19;;;;;;;;4972:45;;;;;;;;;;;-1:-1:-1;;4972:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;4998:19;;4972:45;;;4998:19;4972:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5096:8:5;5090:22;4972:45;;-1:-1:-1;;;;5090:22:5;-1:-1:-1;;5090:22:5;;;;;;;;;;;5086:74;;5140:9;-1:-1:-1;5133:16:5;;5086:74;5262:23;;:27;5258:110;;5336:8;5346:9;5319:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5319:37:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5319:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5305:52;;;;;5258:110;5498:8;5508:18;:7;:16;:18::i;:::-;5481:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5481:46:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5481:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5467:61;;;4795:740;;;:::o;7720:154::-;-1:-1:-1;;;;;7832:25:5;;;7809:4;7832:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7720:154::o;10232:117::-;10289:4;10312:30;:12;10334:7;10312:21;:30::i;590:104:0:-;677:10;590:104;:::o;15888:155:5:-;15953:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15953:29:5;-1:-1:-1;;;;;15953:29:5;;;;;;;;:24;;16006:16;15953:24;16006:7;:16::i;:::-;-1:-1:-1;;;;;15997:39:5;;;;;;;;;;;15888:155;;:::o;7023:121:12:-;7092:7;7118:19;7126:3;7118:7;:19::i;10507:329:5:-;10592:4;10616:16;10624:7;10616;:16::i;:::-;10608:73;;;;-1:-1:-1;;;10608:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10691:13;10707:16;10715:7;10707;:16::i;:::-;10691:32;;10752:5;-1:-1:-1;;;;;10741:16:5;:7;-1:-1:-1;;;;;10741:16:5;;:51;;;;10785:7;-1:-1:-1;;;;;10761:31:5;:20;10773:7;10761:11;:20::i;:::-;-1:-1:-1;;;;;10761:31:5;;10741:51;:87;;;;10796:32;10813:5;10820:7;10796:16;:32::i;:::-;10733:96;10507:329;-1:-1:-1;;;;10507:329:5:o;13501:559::-;13618:4;-1:-1:-1;;;;;13598:24:5;:16;13606:7;13598;:16::i;:::-;-1:-1:-1;;;;;13598:24:5;;13590:78;;;;-1:-1:-1;;;13590:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13686:16:5;;13678:65;;;;-1:-1:-1;;;13678:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13754:39;13775:4;13781:2;13785:7;13754:20;:39::i;:::-;13855:29;13872:1;13876:7;13855:8;:29::i;:::-;-1:-1:-1;;;;;13895:19:5;;;;;;:13;:19;;;;;:35;;13922:7;13895:26;:35::i;:::-;-1:-1:-1;;;;;;13940:17:5;;;;;;:13;:17;;;;;:30;;13962:7;13940:21;:30::i;:::-;-1:-1:-1;13981:29:5;:12;13998:7;14007:2;13981:16;:29::i;:::-;;14045:7;14041:2;-1:-1:-1;;;;;14026:27:5;14035:4;-1:-1:-1;;;;;14026:27:5;;;;;;;;;;;13501:559;;;:::o;7649:135:13:-;7720:7;7754:22;7758:3;7770:5;7754:3;:22::i;7472:224:12:-;7552:7;;;;7611:22;7615:3;7627:5;7611:3;:22::i;:::-;7580:53;;;;-1:-1:-1;7472:224:12;-1:-1:-1;;;;;7472:224:12:o;8115:202::-;8222:7;8264:44;8269:3;8289;8295:12;8264:4;:44::i;:::-;8256:53;-1:-1:-1;8115:202:12;;;;;;:::o;9660:269:5:-;9773:28;9783:4;9789:2;9793:7;9773:9;:28::i;:::-;9819:48;9842:4;9848:2;9852:7;9861:5;9819:22;:48::i;:::-;9811:111;;;;-1:-1:-1;;;9811:111:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;202:723:14;258:13;475:10;471:51;;-1:-1:-1;501:10:14;;;;;;;;;;;;-1:-1:-1;;;501:10:14;;;;;;471:51;546:5;531:12;585:75;592:9;;585:75;;617:8;;647:2;639:10;;;;585:75;;;669:19;701:6;691:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;691:17:14;-1:-1:-1;761:5:14;;-1:-1:-1;669:39:14;-1:-1:-1;;;734:10:14;;776:112;783:9;;776:112;;849:2;842:4;:9;837:2;:14;826:27;;808:6;815:7;;;;;;;808:15;;;;;;;;;;;:45;-1:-1:-1;;;;;808:45:14;;;;;;;;-1:-1:-1;875:2:14;867:10;;;;776:112;;;-1:-1:-1;911:6:14;202:723;-1:-1:-1;;;;202:723:14:o;6791:149:12:-;6875:4;6898:35;6908:3;6928;6898:9;:35::i;4483:108::-;4565:19;;4483:108::o;6764:135:13:-;6834:4;6857:35;6865:3;6885:5;6857:7;:35::i;6467:129::-;6534:4;6557:32;6562:3;6582:5;6557:4;:32::i;6239:174:12:-;6328:4;6351:55;6356:3;6376;-1:-1:-1;;;;;6390:14:12;;6351:4;:55::i;4423:201:13:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:13;;;;-1:-1:-1;;;4509:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;4934:274:12:-;5037:19;;5001:7;;;;5037:27;-1:-1:-1;5029:74:12;;;;-1:-1:-1;;;5029:74:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5114:22;5139:3;:12;;5152:5;5139:19;;;;;;;;;;;;;;;;;;5114:44;;5176:5;:10;;;5188:5;:12;;;5168:33;;;;;4934:274;;;;;:::o;5615:315::-;5709:7;5747:17;;;:12;;;:17;;;;;;5797:12;5782:13;5774:36;;;;-1:-1:-1;;;5774:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5863:3;:12;;5887:1;5876:8;:12;5863:26;;;;;;;;;;;;;;;;;;:33;;;5856:40;;;5615:315;;;;;:::o;15293:589:5:-;15413:4;15438:15;:2;-1:-1:-1;;;;;15438:13:5;;:15::i;:::-;15433:58;;-1:-1:-1;15476:4:5;15469:11;;15433:58;15500:23;15526:246;-1:-1:-1;;;15637:12:5;:10;:12::i;:::-;15663:4;15681:7;15702:5;15542:175;;;;;;-1:-1:-1;;;;;15542:175:5;;;;;;-1:-1:-1;;;;;15542:175:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15542:175:5;;;;;;;-1:-1:-1;;;;;15542:175:5;;;;;;;;;;;15526:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15526:15:5;;;:246;:15;:246::i;:::-;15500:272;;15782:13;15809:10;15798:32;;;;;;;;;;;;;;;-1:-1:-1;15798:32:5;-1:-1:-1;;;;;;15848:26:5;-1:-1:-1;;;15848:26:5;;-1:-1:-1;;;15293:589:5;;;;;;:::o;4270:123:12:-;4341:4;4364:17;;;:12;;;;;:17;;;;;;:22;;;4270:123::o;2183:1512:13:-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:13;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;1611:404;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:13;1986:12;;1828:678:12;1904:4;2037:17;;;:12;;;:17;;;;;;2069:13;2065:435;;-1:-1:-1;;2153:38:12;;;;;;;;;;;;;;;;;;2135:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2347:19;;2327:17;;;:12;;;:17;;;;;;;:39;2380:11;;2065:435;2458:5;2422:3;:12;;2446:1;2435:8;:12;2422:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2484:5;2477:12;;;;;718:610:10;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:10;;;1270:51;-1:-1:-1;;718:610:10:o;3770:194::-;3873:12;3904:53;3927:6;3935:4;3941:1;3944:12;5247;5279:18;5290:6;5279:10;:18::i;:::-;5271:60;;;;;-1:-1:-1;;;5271:60:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:12;5416:23;5443:6;-1:-1:-1;;;;;5443:11:10;5463:8;5474:4;5443:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5443:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5401:78;;;;5493:7;5489:580;;;5523:10;-1:-1:-1;5516:17:10;;-1:-1:-1;5516:17:10;5489:580;5634:17;;:21;5630:429;;5892:10;5886:17;5952:15;5939:10;5935:2;5931:19;5924:44;5841:145;6024:20;;-1:-1:-1;;;6024:20:10;;;;;;;;;;;;;;;;;6031:12;;6024:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "title": "ERC721 Non-Fungible Token Standard basic implementation",
    "version": 1
  },
  "offset": [
    561,
    16734
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x462 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2AB JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x201 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x74A JUMP JUMPDEST PUSH2 0x153 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x89C JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x9A1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x522 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18C7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x194B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x63C JUMPI POP PUSH2 0x63C DUP2 PUSH2 0x637 PUSH2 0xCDF JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x181A PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x692 PUSH1 0x2 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x6A2 PUSH2 0xCDF JUMP JUMPDEST DUP3 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x196C PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x710 SWAP1 DUP4 PUSH2 0xF4C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x742 PUSH1 0x2 DUP5 PUSH2 0xF58 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187C PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1852 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x713 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x8A4 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x917 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x95B PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x9AC PUSH2 0xCDF JUMP JUMPDEST DUP4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x196C PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF8B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0A DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x191C PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV DUP6 MUL DUP3 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xAD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP PUSH1 0x9 SLOAD SWAP4 SWAP5 POP POP POP POP PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0xB01 JUMPI SWAP1 POP PUSH2 0x4AE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x9 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xB69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB55 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB95 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x9 PUSH2 0xBDD DUP5 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC3B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xC3B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC27 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xC67 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 PUSH1 0x2 DUP4 PUSH2 0x10B8 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD18 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD67 DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17EE PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDE8 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDDD DUP5 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xDF8 JUMPI POP PUSH2 0xDF8 DUP2 DUP6 PUSH2 0xCA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE13 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18F3 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA8 DUP4 DUP4 DUP4 PUSH2 0x681 JUMP JUMPDEST PUSH2 0xEB3 PUSH1 0x0 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xED5 SWAP1 DUP3 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xEF8 SWAP1 DUP3 PUSH2 0x10D4 JUMP JUMPDEST POP PUSH2 0xF05 PUSH1 0x2 DUP3 DUP5 PUSH2 0x10E0 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF67 DUP7 DUP7 PUSH2 0x115A JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF81 DUP5 DUP5 DUP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF96 DUP5 DUP5 DUP5 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xFA2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1798 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1002 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4AE JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x101A JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1033 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x105E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 SWAP4 POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP4 ISZERO PUSH2 0x10AF JUMPI PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x108D JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x106A JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x1407 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF81 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x152F JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1776 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1147 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 LT PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18A5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11AF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1235 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1262 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH1 0x0 ADD PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1283 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15C6 JUMP JUMPDEST PUSH2 0x12BF JUMPI POP PUSH1 0x1 PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CD PUSH4 0xA85BD01 PUSH1 0xE1 SHL PUSH2 0x12D4 PUSH2 0xCDF JUMP JUMPDEST DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x133B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1323 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1368 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1798 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x14DB JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1452 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x146F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x149F JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F1 DUP4 DUP4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x1527 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1594 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP7 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP10 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP6 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP6 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP7 SLOAD DUP7 DUP5 MSTORE DUP2 DUP9 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x1 DUP4 SUB DUP2 SLOAD DUP2 LT PUSH2 0x15A7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP POP PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xDF8 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF81 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH1 0x60 PUSH2 0x1614 DUP6 PUSH2 0x15C6 JUMP JUMPDEST PUSH2 0x1665 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16A3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1705 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x170A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x171E JUMPI SWAP2 POP PUSH2 0xDF8 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x172E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1235 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121D JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734552433732313A20747261 PUSH15 0x7366657220746F206E6F6E20455243 CALLDATACOPY ORIGIN BALANCE MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x70657261746F7220717565727920666F PUSH19 0x206E6F6E6578697374656E7420746F6B656E45 MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652063616C6C6572206973206E6F74206F PUSH24 0x6E6572206E6F7220617070726F76656420666F7220616C6C GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x6573734552433732313A206F776E6572207175 PUSH6 0x727920666F72 KECCAK256 PUSH15 0x6F6E6578697374656E7420746F6B65 PUSH15 0x456E756D657261626C654D61703A20 PUSH10 0x6E646578206F7574206F PUSH7 0x20626F756E6473 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76656420717565727920666F72206E6F6E65 PUSH25 0x697374656E7420746F6B656E4552433732313A207472616E73 PUSH7 0x6572206F662074 PUSH16 0x6B656E2074686174206973206E6F7420 PUSH16 0x776E4552433732314D65746164617461 GASPRICE KECCAK256 SSTORE MSTORE 0x49 KECCAK256 PUSH18 0x7565727920666F72206E6F6E657869737465 PUSH15 0x7420746F6B656E4552433732313A20 PUSH2 0x7070 PUSH19 0x6F76616C20746F2063757272656E74206F776E PUSH6 0x724552433732 BALANCE GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0xA264697066 PUSH20 0x582212207C422930C5771DD327737020F970B61E 0xD8 0x48 0x5D EXTCODESIZE 0xC8 PUSH7 0x7BC26F79DBBFDD NUMBER 0xA5 PUSH15 0x64736F6C6343000706003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4F6CCCE7"
    },
    "38": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x349"
    },
    "64": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x351"
    },
    "75": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB88D4FDE"
    },
    "82": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37F"
    },
    "86": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC87B56DD"
    },
    "93": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x445"
    },
    "97": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x462"
    },
    "108": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4F6CCCE7"
    },
    "120": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E1"
    },
    "124": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6352211E"
    },
    "131": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FE"
    },
    "135": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6C0360EB"
    },
    "142": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "146": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "153": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x323"
    },
    "157": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "GT",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "180": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22F"
    },
    "184": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x249"
    },
    "195": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2F745C59"
    },
    "202": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27F"
    },
    "206": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x42842E0E"
    },
    "213": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "214": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AB"
    },
    "217": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "218": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "222": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "224": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1FFC9A7"
    },
    "229": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "235": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "240": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "241": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14B"
    },
    "244": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x81812FC"
    },
    "251": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8"
    },
    "255": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "EQ",
      "path": "5"
    },
    "263": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x201"
    },
    "266": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "268": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "DUP1",
      "path": "5"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        561,
        16734
      ],
      "op": "REVERT",
      "path": "5"
    },
    "272": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "273": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137"
    },
    "276": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "278": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "279": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "280": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SUB",
      "path": "2"
    },
    "281": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "283": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "284": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "LT",
      "path": "2"
    },
    "285": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "286": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126"
    },
    "289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "290": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "292": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "293": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "REVERT",
      "path": "2"
    },
    "294": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "op": "NOT"
    },
    "306": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "AND",
      "path": "2"
    },
    "307": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x490"
    },
    "310": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        939,
        1079
      ],
      "op": "JUMP",
      "path": "2"
    },
    "311": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "312": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "314": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "315": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "316": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "317": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "318": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "319": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "320": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "321": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "322": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "323": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "324": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "325": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SUB",
      "path": "2"
    },
    "326": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "328": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "ADD",
      "path": "2"
    },
    "329": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "330": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "RETURN",
      "path": "2"
    },
    "331": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "332": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x153"
    },
    "335": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B3"
    },
    "338": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMP",
      "path": "5"
    },
    "339": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "340": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "342": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "343": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "344": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "346": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "347": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP3",
      "path": "5"
    },
    "348": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "349": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "350": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "351": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "352": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "353": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "354": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "355": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "356": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "357": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "358": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "359": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "360": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "361": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "362": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "363": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "364": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "365": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP6",
      "path": "5"
    },
    "366": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "367": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "368": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "369": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "370": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "371": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "373": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "374": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "375": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "376": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "LT",
      "path": "5"
    },
    "377": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "378": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D"
    },
    "381": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "382": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "383": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "384": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "385": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "386": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "387": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP3",
      "path": "5"
    },
    "388": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "389": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "390": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "392": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "393": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175"
    },
    "396": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMP",
      "path": "5"
    },
    "397": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "398": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "399": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "400": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "401": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "402": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "403": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "404": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "405": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "406": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "407": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "408": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "410": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "AND",
      "path": "5"
    },
    "411": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "412": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "413": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BA"
    },
    "416": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "417": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "418": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP3",
      "path": "5"
    },
    "419": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SUB",
      "path": "5"
    },
    "420": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "421": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "422": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "424": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "425": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SUB",
      "path": "5"
    },
    "428": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "431": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "EXP",
      "path": "5"
    },
    "432": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SUB",
      "path": "5"
    },
    "433": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "NOT",
      "path": "5"
    },
    "434": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "AND",
      "path": "5"
    },
    "435": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "436": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "437": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "439": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "ADD",
      "path": "5"
    },
    "440": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "441": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "442": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "443": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "444": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "445": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "446": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "447": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "POP",
      "path": "5"
    },
    "448": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "450": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "451": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "452": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "453": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SUB",
      "path": "5"
    },
    "454": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "455": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "RETURN",
      "path": "5"
    },
    "456": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "457": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "460": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "462": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "DUP1",
      "path": "5"
    },
    "463": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "464": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SUB",
      "path": "5"
    },
    "465": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "467": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "DUP2",
      "path": "5"
    },
    "468": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "LT",
      "path": "5"
    },
    "469": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "470": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DE"
    },
    "473": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "474": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "DUP1",
      "path": "5"
    },
    "477": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "REVERT",
      "path": "5"
    },
    "478": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "481": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x549"
    },
    "484": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "485": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "486": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "488": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "DUP1",
      "path": "5"
    },
    "489": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "499": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "500": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "AND",
      "path": "5"
    },
    "501": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "DUP3",
      "path": "5"
    },
    "502": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "503": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "504": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "505": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "DUP2",
      "path": "5"
    },
    "506": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "507": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SUB",
      "path": "5"
    },
    "508": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "510": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "ADD",
      "path": "5"
    },
    "511": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "512": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "RETURN",
      "path": "5"
    },
    "513": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "514": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22D"
    },
    "517": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "519": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "DUP1",
      "path": "5"
    },
    "520": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "521": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "SUB",
      "path": "5"
    },
    "522": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "524": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "DUP2",
      "path": "5"
    },
    "525": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "LT",
      "path": "5"
    },
    "526": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "527": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x217"
    },
    "530": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "531": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "533": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "DUP1",
      "path": "5"
    },
    "534": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "REVERT",
      "path": "5"
    },
    "535": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "DUP2",
      "path": "5"
    },
    "546": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "547": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "AND",
      "path": "5"
    },
    "548": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "549": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "ADD",
      "path": "5"
    },
    "552": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "553": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5AB"
    },
    "556": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMP",
      "path": "5"
    },
    "557": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "558": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "STOP",
      "path": "5"
    },
    "559": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "560": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237"
    },
    "563": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x686"
    },
    "566": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6156,
        6356
      ],
      "op": "JUMP",
      "path": "5"
    },
    "567": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "568": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "570": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "571": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "572": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "573": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "574": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "575": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "576": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "577": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "578": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "579": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "SUB",
      "path": "5"
    },
    "580": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "582": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "ADD",
      "path": "5"
    },
    "583": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "584": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "RETURN",
      "path": "5"
    },
    "585": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "586": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22D"
    },
    "589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "DUP1",
      "path": "5"
    },
    "592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "SUB",
      "path": "5"
    },
    "594": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "DUP2",
      "path": "5"
    },
    "597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "LT",
      "path": "5"
    },
    "598": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "599": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25F"
    },
    "602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "DUP1",
      "path": "5"
    },
    "606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "REVERT",
      "path": "5"
    },
    "607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "DUP2",
      "path": "5"
    },
    "618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "619": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "DUP2",
      "path": "5"
    },
    "620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "AND",
      "path": "5"
    },
    "621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "622": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "624": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "DUP2",
      "path": "5"
    },
    "625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "ADD",
      "path": "5"
    },
    "626": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "627": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "628": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "AND",
      "path": "5"
    },
    "630": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "631": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "ADD",
      "path": "5"
    },
    "634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x697"
    },
    "638": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        7936,
        8236
      ],
      "op": "JUMP",
      "path": "5"
    },
    "639": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "640": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237"
    },
    "643": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "645": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "DUP1",
      "path": "5"
    },
    "646": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "647": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "SUB",
      "path": "5"
    },
    "648": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "650": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "DUP2",
      "path": "5"
    },
    "651": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "LT",
      "path": "5"
    },
    "652": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "653": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x295"
    },
    "656": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "657": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "DUP1",
      "path": "5"
    },
    "660": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "REVERT",
      "path": "5"
    },
    "661": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "DUP2",
      "path": "5"
    },
    "672": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "673": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "AND",
      "path": "5"
    },
    "674": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "675": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "677": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "ADD",
      "path": "5"
    },
    "678": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "679": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6EE"
    },
    "682": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22D"
    },
    "687": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "691": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "SUB",
      "path": "5"
    },
    "692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "LT",
      "path": "5"
    },
    "696": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C1"
    },
    "700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "REVERT",
      "path": "5"
    },
    "705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "AND",
      "path": "5"
    },
    "719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "ADD",
      "path": "5"
    },
    "724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "AND",
      "path": "5"
    },
    "728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "ADD",
      "path": "5"
    },
    "732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x719"
    },
    "736": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8302,
        8451
      ],
      "op": "JUMP",
      "path": "5"
    },
    "737": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "738": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237"
    },
    "741": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "743": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "DUP1",
      "path": "5"
    },
    "744": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "745": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "SUB",
      "path": "5"
    },
    "746": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "749": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "LT",
      "path": "5"
    },
    "750": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "751": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F7"
    },
    "754": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "755": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "757": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "DUP1",
      "path": "5"
    },
    "758": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "REVERT",
      "path": "5"
    },
    "759": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "762": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x734"
    },
    "765": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6428,
        6589
      ],
      "op": "JUMP",
      "path": "5"
    },
    "766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "770": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "772": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "DUP1",
      "path": "5"
    },
    "773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "SUB",
      "path": "5"
    },
    "775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "LT",
      "path": "5"
    },
    "779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x314"
    },
    "783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "786": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "DUP1",
      "path": "5"
    },
    "787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "REVERT",
      "path": "5"
    },
    "788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "791": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74A"
    },
    "794": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4252,
        4419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "795": {
      "fn": "ERC721.baseURI",
      "offset": [
        5767,
        5854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "796": {
      "fn": "ERC721.baseURI",
      "offset": [
        5767,
        5854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x153"
    },
    "799": {
      "fn": "ERC721.baseURI",
      "offset": [
        5767,
        5854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x772"
    },
    "802": {
      "fn": "ERC721.baseURI",
      "jump": "i",
      "offset": [
        5767,
        5854
      ],
      "op": "JUMP",
      "path": "5"
    },
    "803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "804": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237"
    },
    "807": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "810": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "SUB",
      "path": "5"
    },
    "812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "DUP2",
      "path": "5"
    },
    "815": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "LT",
      "path": "5"
    },
    "816": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "817": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x339"
    },
    "820": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "821": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "823": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "REVERT",
      "path": "5"
    },
    "825": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "AND",
      "path": "5"
    },
    "837": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D3"
    },
    "840": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        3984,
        4195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "841": {
      "fn": "ERC721.symbol",
      "offset": [
        4635,
        4729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "842": {
      "fn": "ERC721.symbol",
      "offset": [
        4635,
        4729
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x153"
    },
    "845": {
      "fn": "ERC721.symbol",
      "offset": [
        4635,
        4729
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x83B"
    },
    "848": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        4635,
        4729
      ],
      "op": "JUMP",
      "path": "5"
    },
    "849": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "850": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22D"
    },
    "853": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "856": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "857": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "SUB",
      "path": "5"
    },
    "858": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "861": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "LT",
      "path": "5"
    },
    "862": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "863": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x367"
    },
    "866": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "867": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "870": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "REVERT",
      "path": "5"
    },
    "871": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "882": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "883": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "AND",
      "path": "5"
    },
    "884": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "885": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "ADD",
      "path": "5"
    },
    "888": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "889": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "890": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "891": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89C"
    },
    "894": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7364,
        7654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "895": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "896": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22D"
    },
    "899": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "901": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "902": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "903": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SUB",
      "path": "5"
    },
    "904": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "906": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "907": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "LT",
      "path": "5"
    },
    "908": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "909": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x395"
    },
    "912": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "913": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "915": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "916": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "REVERT",
      "path": "5"
    },
    "917": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP3",
      "path": "5"
    },
    "927": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "928": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "929": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "AND",
      "path": "5"
    },
    "930": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "931": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "933": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "934": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "935": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "938": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "AND",
      "path": "5"
    },
    "939": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "940": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP3",
      "path": "5"
    },
    "943": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "944": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "947": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "949": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "950": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "953": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "954": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "956": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP3",
      "path": "5"
    },
    "957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "959": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "965": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "966": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "GT",
      "path": "5"
    },
    "967": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "968": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D0"
    },
    "971": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "972": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "975": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "REVERT",
      "path": "5"
    },
    "976": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "977": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP3",
      "path": "5"
    },
    "978": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "979": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP4",
      "path": "5"
    },
    "980": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP3",
      "path": "5"
    },
    "983": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "984": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "GT",
      "path": "5"
    },
    "985": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "986": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E2"
    },
    "989": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "990": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "992": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "993": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "REVERT",
      "path": "5"
    },
    "994": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "996": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "997": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "998": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "MUL",
      "path": "5"
    },
    "1007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "GT",
      "path": "5"
    },
    "1010": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1017": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "GT",
      "path": "5"
    },
    "1018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "OR",
      "path": "5"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x404"
    },
    "1023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1036": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1040": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DIV",
      "path": "5"
    },
    "1041": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "MUL",
      "path": "5"
    },
    "1042": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1044": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1045": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1047": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1048": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1050": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1058": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1059": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1067": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "ADD",
      "path": "5"
    },
    "1075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1077": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1078": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A1"
    },
    "1086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x153"
    },
    "1097": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "SUB",
      "path": "5"
    },
    "1102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1105": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "LT",
      "path": "5"
    },
    "1106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x45B"
    },
    "1110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9FF"
    },
    "1121": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        4795,
        5535
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1123": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x137"
    },
    "1126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1129": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "SUB",
      "path": "5"
    },
    "1131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "LT",
      "path": "5"
    },
    "1135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1136": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x478"
    },
    "1139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "AND",
      "path": "5"
    },
    "1158": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1159": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1161": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "ADD",
      "path": "5"
    },
    "1162": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "AND",
      "path": "5"
    },
    "1164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA4"
    },
    "1167": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        7720,
        7874
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1168": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "op": "NOT"
    },
    "1178": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 0
    },
    "1179": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "AND",
      "path": "2"
    },
    "1180": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1016,
        1020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1182": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1183": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1184": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1185": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1188": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1189": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1190": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1192": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1193": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1194": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1195": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1197": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1039,
        1072
      ],
      "op": "AND",
      "path": "2"
    },
    "1198": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1199": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1200": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1201": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        939,
        1079
      ],
      "op": "POP",
      "path": "2"
    },
    "1202": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        939,
        1079
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1203": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1204": {
      "fn": "ERC721.name",
      "offset": [
        4559,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x6"
    },
    "1206": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1207": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1208": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1210": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1211": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1212": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1214": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1216": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1224": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1226": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1227": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "AND",
      "path": "5"
    },
    "1228": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1229": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MUL",
      "path": "5"
    },
    "1230": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1231": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1232": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1233": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "AND",
      "path": "5"
    },
    "1234": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1235": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1236": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1237": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DIV",
      "path": "5"
    },
    "1238": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1239": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1240": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1241": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1242": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1243": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DIV",
      "path": "5"
    },
    "1244": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1245": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MUL",
      "path": "5"
    },
    "1246": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1247": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1248": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1249": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1250": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1251": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1252": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1253": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1254": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1255": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1256": {
      "fn": "ERC721.name",
      "offset": [
        4527,
        4540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1258": {
      "fn": "ERC721.name",
      "offset": [
        4527,
        4540
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1259": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1260": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1261": {
      "fn": "ERC721.name",
      "offset": [
        4559,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1262": {
      "fn": "ERC721.name",
      "offset": [
        4559,
        4564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1263": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1264": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1265": {
      "fn": "ERC721.name",
      "offset": [
        4559,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1266": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1267": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1268": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1269": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53F"
    },
    "1272": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1273": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1274": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1276": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "LT",
      "path": "5"
    },
    "1277": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x514"
    },
    "1280": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1281": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1284": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1285": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1286": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1287": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DIV",
      "path": "5"
    },
    "1288": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MUL",
      "path": "5"
    },
    "1289": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1290": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1291": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1292": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1294": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1295": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1296": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53F"
    },
    "1299": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1300": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1301": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1302": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1303": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1304": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1305": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1308": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1310": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1312": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1313": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1314": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1315": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1316": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1317": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1318": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1319": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1320": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1322": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1323": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1324": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1326": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1327": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1328": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1329": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "GT",
      "path": "5"
    },
    "1330": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x522"
    },
    "1333": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1334": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1335": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1336": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SUB",
      "path": "5"
    },
    "1337": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1339": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "AND",
      "path": "5"
    },
    "1340": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1341": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "ADD",
      "path": "5"
    },
    "1342": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1343": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1344": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "POP",
      "path": "5"
    },
    "1345": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "POP",
      "path": "5"
    },
    "1346": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "POP",
      "path": "5"
    },
    "1347": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "POP",
      "path": "5"
    },
    "1348": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "POP",
      "path": "5"
    },
    "1349": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1350": {
      "fn": "ERC721.name",
      "offset": [
        4552,
        4564
      ],
      "op": "POP",
      "path": "5"
    },
    "1351": {
      "fn": "ERC721.name",
      "offset": [
        4481,
        4571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1352": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        4481,
        4571
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1353": {
      "fn": "ERC721.getApproved",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1354": {
      "fn": "ERC721.getApproved",
      "offset": [
        7156,
        7163
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1356": {
      "fn": "ERC721.getApproved",
      "offset": [
        7183,
        7199
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 2,
      "value": "0x554"
    },
    "1359": {
      "fn": "ERC721.getApproved",
      "offset": [
        7191,
        7198
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1360": {
      "fn": "ERC721.getApproved",
      "offset": [
        7183,
        7190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD2"
    },
    "1363": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7183,
        7199
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1364": {
      "branch": 87,
      "fn": "ERC721.getApproved",
      "offset": [
        7183,
        7199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1365": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58F"
    },
    "1368": {
      "branch": 87,
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1369": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1371": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1380": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1381": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1383": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "ADD",
      "path": "5"
    },
    "1384": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1385": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1386": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1388": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "ADD",
      "path": "5"
    },
    "1389": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1390": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1391": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "SUB",
      "path": "5"
    },
    "1392": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1393": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1394": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2C"
    },
    "1396": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1397": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1398": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1400": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "ADD",
      "path": "5"
    },
    "1401": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1402": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18C7"
    },
    "1405": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2C"
    },
    "1407": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1408": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1409": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1411": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "ADD",
      "path": "5"
    },
    "1412": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1413": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "POP",
      "path": "5"
    },
    "1414": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "POP",
      "path": "5"
    },
    "1415": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1417": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1418": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1419": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1420": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "SUB",
      "path": "5"
    },
    "1421": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1422": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1423": {
      "fn": "ERC721.getApproved",
      "offset": [
        7175,
        7248
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x0"
    },
    "1427": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1428": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1429": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1430": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1432": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1434": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1435": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1437": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1438": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1439": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "AND",
      "path": "5"
    },
    "1449": {
      "fn": "ERC721.getApproved",
      "offset": [
        7266,
        7290
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1450": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        7088,
        7297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1451": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1452": {
      "fn": "ERC721.approve",
      "offset": [
        6726,
        6739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1454": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6758
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "ERC721.approve",
      "offset": [
        6750,
        6757
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1458": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6749
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74A"
    },
    "1461": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6742,
        6758
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1462": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6758
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1463": {
      "fn": "ERC721.approve",
      "offset": [
        6726,
        6758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1464": {
      "fn": "ERC721.approve",
      "offset": [
        6726,
        6758
      ],
      "op": "POP",
      "path": "5"
    },
    "1465": {
      "fn": "ERC721.approve",
      "offset": [
        6782,
        6787
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 4
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC721.approve",
      "offset": [
        6776,
        6787
      ],
      "op": "AND",
      "path": "5"
    },
    "1475": {
      "fn": "ERC721.approve",
      "offset": [
        6776,
        6778
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "ERC721.approve",
      "offset": [
        6776,
        6787
      ],
      "op": "AND",
      "path": "5"
    },
    "1485": {
      "fn": "ERC721.approve",
      "offset": [
        6776,
        6787
      ],
      "op": "EQ",
      "path": "5"
    },
    "1486": {
      "branch": 88,
      "fn": "ERC721.approve",
      "offset": [
        6776,
        6787
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1487": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x609"
    },
    "1490": {
      "branch": 88,
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1491": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1493": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1502": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1503": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1505": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "ADD",
      "path": "5"
    },
    "1506": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1507": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1508": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1510": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "ADD",
      "path": "5"
    },
    "1511": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1512": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1513": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "SUB",
      "path": "5"
    },
    "1514": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1515": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1516": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "1518": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1519": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1520": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1522": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "ADD",
      "path": "5"
    },
    "1523": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1524": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x194B"
    },
    "1527": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "1529": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1530": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1531": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1533": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "ADD",
      "path": "5"
    },
    "1534": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1535": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "POP",
      "path": "5"
    },
    "1536": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "POP",
      "path": "5"
    },
    "1537": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1539": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1540": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1541": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1542": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "SUB",
      "path": "5"
    },
    "1543": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1544": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1545": {
      "fn": "ERC721.approve",
      "offset": [
        6768,
        6825
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1546": {
      "fn": "ERC721.approve",
      "offset": [
        6860,
        6865
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 5
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "SUB"
    },
    "1555": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6865
      ],
      "op": "AND",
      "path": "5"
    },
    "1556": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61B"
    },
    "1559": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "1562": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6844,
        6856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1563": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6865
      ],
      "op": "AND",
      "path": "5"
    },
    "1573": {
      "branch": 89,
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6865
      ],
      "op": "EQ",
      "path": "5"
    },
    "1574": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6906
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1575": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6906
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63C"
    },
    "1578": {
      "branch": 89,
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6906
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1579": {
      "fn": "ERC721.approve",
      "offset": [
        6844,
        6906
      ],
      "op": "POP",
      "path": "5"
    },
    "1580": {
      "fn": "ERC721.approve",
      "offset": [
        6869,
        6906
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63C"
    },
    "1583": {
      "fn": "ERC721.approve",
      "offset": [
        6886,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1584": {
      "fn": "ERC721.approve",
      "offset": [
        6893,
        6905
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x637"
    },
    "1587": {
      "fn": "ERC721.approve",
      "offset": [
        6893,
        6903
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "1590": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6893,
        6905
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1591": {
      "fn": "ERC721.approve",
      "offset": [
        6893,
        6905
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1592": {
      "fn": "ERC721.approve",
      "offset": [
        6869,
        6885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA4"
    },
    "1595": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6869,
        6906
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1596": {
      "branch": 90,
      "fn": "ERC721.approve",
      "offset": [
        6869,
        6906
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1597": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x677"
    },
    "1600": {
      "branch": 90,
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1601": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1603": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1612": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1613": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1615": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "ADD",
      "path": "5"
    },
    "1616": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1617": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1618": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1620": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "ADD",
      "path": "5"
    },
    "1621": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1622": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1623": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "SUB",
      "path": "5"
    },
    "1624": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1625": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1626": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x38"
    },
    "1628": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1629": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1630": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "ADD",
      "path": "5"
    },
    "1633": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1634": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x181A"
    },
    "1637": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x38"
    },
    "1639": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1640": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1641": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1643": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "ADD",
      "path": "5"
    },
    "1644": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1645": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "POP",
      "path": "5"
    },
    "1646": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "POP",
      "path": "5"
    },
    "1647": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1649": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1650": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1651": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1652": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "SUB",
      "path": "5"
    },
    "1653": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1654": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1655": {
      "fn": "ERC721.approve",
      "offset": [
        6836,
        6988
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1656": {
      "fn": "ERC721.approve",
      "offset": [
        6999,
        7020
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 6,
      "value": "0x681"
    },
    "1659": {
      "fn": "ERC721.approve",
      "offset": [
        7008,
        7010
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1660": {
      "fn": "ERC721.approve",
      "offset": [
        7012,
        7019
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1661": {
      "fn": "ERC721.approve",
      "offset": [
        6999,
        7007
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE3"
    },
    "1664": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6999,
        7020
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1665": {
      "fn": "ERC721.approve",
      "offset": [
        6999,
        7020
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1666": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "POP",
      "path": "5"
    },
    "1667": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "POP",
      "path": "5"
    },
    "1668": {
      "fn": "ERC721.approve",
      "offset": [
        6646,
        7027
      ],
      "op": "POP",
      "path": "5"
    },
    "1669": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        6646,
        7027
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1670": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1671": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6209,
        6216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1673": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 7,
      "value": "0x692"
    },
    "1676": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6328,
        6340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1678": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6328,
        6347
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD51"
    },
    "1681": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1682": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1683": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6321,
        6349
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1684": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6321,
        6349
      ],
      "op": "POP",
      "path": "5"
    },
    "1685": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6156,
        6356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1686": {
      "fn": "ERC721.totalSupply",
      "jump": "o",
      "offset": [
        6156,
        6356
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1687": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7936,
        8236
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1688": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8095,
        8136
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 8,
      "value": "0x6A8"
    },
    "1691": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8114,
        8126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A2"
    },
    "1694": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8114,
        8124
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "1697": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8114,
        8126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1698": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8114,
        8126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1699": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8128,
        8135
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1700": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8095,
        8113
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5C"
    },
    "1703": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8095,
        8136
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1704": {
      "branch": 91,
      "fn": "ERC721.transferFrom",
      "offset": [
        8095,
        8136
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1705": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E3"
    },
    "1708": {
      "branch": 91,
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1709": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1711": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1720": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1721": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1723": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "ADD",
      "path": "5"
    },
    "1724": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1725": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1726": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1728": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "ADD",
      "path": "5"
    },
    "1729": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1730": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1731": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "SUB",
      "path": "5"
    },
    "1732": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1733": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1734": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x31"
    },
    "1736": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1737": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1738": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1740": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "ADD",
      "path": "5"
    },
    "1741": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1742": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196C"
    },
    "1745": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x31"
    },
    "1747": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1748": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1749": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "ADD",
      "path": "5"
    },
    "1752": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1753": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "POP",
      "path": "5"
    },
    "1754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "POP",
      "path": "5"
    },
    "1755": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1759": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "SUB",
      "path": "5"
    },
    "1761": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1763": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8087,
        8190
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8201,
        8229
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 9,
      "value": "0x681"
    },
    "1767": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8211,
        8215
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8217,
        8219
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1769": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8221,
        8228
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8201,
        8210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE00"
    },
    "1773": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8201,
        8229
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1774": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "SUB"
    },
    "1783": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 10
    },
    "1784": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "AND",
      "path": "5"
    },
    "1785": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1788": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1789": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1790": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1792": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1794": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1795": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1797": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1798": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6068
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1799": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x710"
    },
    "1802": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1803": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6072,
        6077
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1804": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF4C"
    },
    "1807": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1808": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1809": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6041,
        6078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1810": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6041,
        6078
      ],
      "op": "POP",
      "path": "5"
    },
    "1811": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1812": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1813": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1814": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "POP",
      "path": "5"
    },
    "1815": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5933,
        6085
      ],
      "op": "POP",
      "path": "5"
    },
    "1816": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        5933,
        6085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8302,
        8451
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1818": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 11,
      "value": "0x681"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8422,
        8426
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8428,
        8430
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8432,
        8439
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1824": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1826": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "ADD",
      "path": "5"
    },
    "1831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1835": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8444
      ],
      "op": "POP",
      "path": "5"
    },
    "1840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8405,
        8421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A1"
    },
    "1843": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8405,
        8444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1844": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1845": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6495,
        6502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1847": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6495,
        6502
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1848": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6536,
        6558
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x742"
    },
    "1851": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6536,
        6548
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1853": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6552,
        6557
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1854": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6536,
        6551
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF58"
    },
    "1857": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6536,
        6558
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1858": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6536,
        6558
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6514,
        6558
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1861": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6428,
        6589
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "ERC721.tokenByIndex",
      "jump": "o",
      "offset": [
        6428,
        6589
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1866": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4252,
        4419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1867": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4323
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1869": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 12,
      "value": "0x713"
    },
    "1872": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4359,
        4366
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1873": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1876": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1877": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1879": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "ADD",
      "path": "5"
    },
    "1880": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1883": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1884": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "1886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1887": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1888": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1890": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "ADD",
      "path": "5"
    },
    "1891": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x187C"
    },
    "1894": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "1896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1897": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1898": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4354
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1900": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4354
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1902": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4342,
        4358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF74"
    },
    "1905": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4342,
        4412
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1906": {
      "fn": "ERC721.baseURI",
      "offset": [
        5767,
        5854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1907": {
      "fn": "ERC721.baseURI",
      "offset": [
        5839,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x9"
    },
    "1909": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1910": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1911": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1913": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1914": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1915": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1917": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1919": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "NOT"
    },
    "1924": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1927": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1929": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1930": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "AND",
      "path": "5"
    },
    "1931": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1932": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MUL",
      "path": "5"
    },
    "1933": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "1934": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1935": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1936": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "AND",
      "path": "5"
    },
    "1937": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1938": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1939": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1940": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DIV",
      "path": "5"
    },
    "1941": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1942": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1943": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "1944": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1945": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1946": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DIV",
      "path": "5"
    },
    "1947": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1948": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MUL",
      "path": "5"
    },
    "1949": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1950": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "1951": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1952": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "1953": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1954": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1955": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1956": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1957": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1958": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1959": {
      "fn": "ERC721.baseURI",
      "offset": [
        5807,
        5820
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1961": {
      "fn": "ERC721.baseURI",
      "offset": [
        5807,
        5820
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1962": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1963": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1964": {
      "fn": "ERC721.baseURI",
      "offset": [
        5839,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1965": {
      "fn": "ERC721.baseURI",
      "offset": [
        5839,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1966": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1967": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "1968": {
      "fn": "ERC721.baseURI",
      "offset": [
        5839,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1969": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1970": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1971": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1972": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53F"
    },
    "1975": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1976": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1977": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1979": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "LT",
      "path": "5"
    },
    "1980": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x514"
    },
    "1983": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1984": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1987": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1988": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1989": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1990": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DIV",
      "path": "5"
    },
    "1991": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MUL",
      "path": "5"
    },
    "1992": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1993": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1994": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1995": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1997": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "1998": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1999": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53F"
    },
    "2002": {
      "fn": "ERC721.baseURI",
      "offset": [
        5832,
        5847
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2003": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3984,
        4195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2004": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4048,
        4055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "op": "SUB"
    },
    "2014": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4075,
        4094
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 14
    },
    "2015": {
      "branch": 92,
      "fn": "ERC721.balanceOf",
      "offset": [
        4075,
        4094
      ],
      "op": "AND",
      "path": "5"
    },
    "2016": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81A"
    },
    "2019": {
      "branch": 92,
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2020": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2031": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2032": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2034": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "ADD",
      "path": "5"
    },
    "2035": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2036": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2037": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2039": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "ADD",
      "path": "5"
    },
    "2040": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2041": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2042": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "SUB",
      "path": "5"
    },
    "2043": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2044": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2045": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "2047": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2048": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2049": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "ADD",
      "path": "5"
    },
    "2052": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2053": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1852"
    },
    "2056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "2058": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2060": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2062": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "ADD",
      "path": "5"
    },
    "2063": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "POP",
      "path": "5"
    },
    "2065": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "POP",
      "path": "5"
    },
    "2066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2069": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2070": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2071": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "SUB",
      "path": "5"
    },
    "2072": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2073": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2074": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4067,
        4141
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 15
    },
    "2084": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "AND",
      "path": "5"
    },
    "2085": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2087": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2088": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2089": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2090": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4172
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2092": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2094": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2095": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2097": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2098": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4179
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2099": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x713"
    },
    "2102": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2103": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4159,
        4186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD51"
    },
    "2106": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4159,
        4188
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2107": {
      "fn": "ERC721.symbol",
      "offset": [
        4635,
        4729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2108": {
      "fn": "ERC721.symbol",
      "offset": [
        4715,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x7"
    },
    "2110": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2111": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2112": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2114": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2115": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2116": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2118": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2120": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2124": {
      "op": "NOT"
    },
    "2125": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2128": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2130": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2131": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "AND",
      "path": "5"
    },
    "2132": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2133": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MUL",
      "path": "5"
    },
    "2134": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "5"
    },
    "2135": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2136": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2137": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "AND",
      "path": "5"
    },
    "2138": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2139": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2140": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2141": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DIV",
      "path": "5"
    },
    "2142": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2143": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2144": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "5"
    },
    "2145": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2146": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2147": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DIV",
      "path": "5"
    },
    "2148": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2149": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MUL",
      "path": "5"
    },
    "2150": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2151": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "5"
    },
    "2152": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2153": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "5"
    },
    "2154": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2155": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2156": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2157": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2158": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2159": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2160": {
      "fn": "ERC721.symbol",
      "offset": [
        4683,
        4696
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2162": {
      "fn": "ERC721.symbol",
      "offset": [
        4683,
        4696
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2163": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2164": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2165": {
      "fn": "ERC721.symbol",
      "offset": [
        4715,
        4722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2166": {
      "fn": "ERC721.symbol",
      "offset": [
        4715,
        4722
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2167": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2168": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "5"
    },
    "2169": {
      "fn": "ERC721.symbol",
      "offset": [
        4715,
        4722
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2170": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2171": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2172": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2173": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53F"
    },
    "2176": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2177": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2178": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2180": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "LT",
      "path": "5"
    },
    "2181": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x514"
    },
    "2184": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2185": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2188": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2189": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2190": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2191": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DIV",
      "path": "5"
    },
    "2192": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MUL",
      "path": "5"
    },
    "2193": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2194": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2195": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2196": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "5"
    },
    "2199": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2200": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53F"
    },
    "2203": {
      "fn": "ERC721.symbol",
      "offset": [
        4708,
        4722
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7478,
        7490
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 17,
      "value": "0x8A4"
    },
    "2208": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7478,
        7488
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "2211": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7478,
        7490
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2212": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7478,
        7490
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "op": "SUB"
    },
    "2221": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7466,
        7490
      ],
      "op": "AND",
      "path": "5"
    },
    "2222": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7466,
        7474
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7466,
        7490
      ],
      "op": "AND",
      "path": "5"
    },
    "2232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7466,
        7490
      ],
      "op": "EQ",
      "path": "5"
    },
    "2233": {
      "branch": 93,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7466,
        7490
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2234": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90A"
    },
    "2237": {
      "branch": 93,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2238": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2241": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2250": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2251": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2253": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2255": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2256": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "ADD",
      "path": "5"
    },
    "2257": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2258": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x19"
    },
    "2260": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2262": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2263": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "ADD",
      "path": "5"
    },
    "2264": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2265": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2298": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2300": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2301": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "ADD",
      "path": "5"
    },
    "2302": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2303": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2304": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2305": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2307": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "SUB",
      "path": "5"
    },
    "2309": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2311": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "ADD",
      "path": "5"
    },
    "2312": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2313": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2314": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7458,
        7520
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2315": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7576,
        7584
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 18
    },
    "2316": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7549
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2318": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2320": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7550,
        7562
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x917"
    },
    "2323": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7550,
        7560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "2326": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7550,
        7562
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2327": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7550,
        7562
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2337": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2338": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "AND",
      "path": "5"
    },
    "2339": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2340": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2343": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2344": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2345": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "ADD",
      "path": "5"
    },
    "2346": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2347": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2348": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2349": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2352": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2353": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2354": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "ADD",
      "path": "5"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2358": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2359": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7563
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2360": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2361": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2362": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "AND",
      "path": "5"
    },
    "2363": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2364": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2365": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2366": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2367": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2368": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2369": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2370": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2371": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7573
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2372": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2373": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2376": {
      "op": "NOT"
    },
    "2377": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "AND",
      "path": "5"
    },
    "2378": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2380": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2381": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2382": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2383": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2384": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "OR",
      "path": "5"
    },
    "2385": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2386": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2387": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7531,
        7584
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2388": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7614,
        7626
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 19,
      "value": "0x95B"
    },
    "2391": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7614,
        7624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "2394": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7614,
        7626
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2395": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7614,
        7626
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "SUB"
    },
    "2404": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "AND",
      "path": "5"
    },
    "2405": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2438": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7638,
        7646
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2441": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2444": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2446": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2447": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2448": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "ADD",
      "path": "5"
    },
    "2451": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2452": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "POP",
      "path": "5"
    },
    "2453": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "POP",
      "path": "5"
    },
    "2454": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2456": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2457": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2458": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "SUB",
      "path": "5"
    },
    "2460": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7599,
        7647
      ],
      "op": "LOG3",
      "path": "5"
    },
    "2462": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "POP",
      "path": "5"
    },
    "2463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7364,
        7654
      ],
      "op": "POP",
      "path": "5"
    },
    "2464": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        7364,
        7654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2465": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8648,
        8689
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 20,
      "value": "0x9B2"
    },
    "2469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8679
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AC"
    },
    "2472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "2475": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8667,
        8679
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8679
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2477": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8681,
        8688
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2478": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8648,
        8666
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5C"
    },
    "2481": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8648,
        8689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2482": {
      "branch": 94,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8648,
        8689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9ED"
    },
    "2486": {
      "branch": 94,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2499": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "ADD",
      "path": "5"
    },
    "2502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2503": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "ADD",
      "path": "5"
    },
    "2507": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2508": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "SUB",
      "path": "5"
    },
    "2510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x31"
    },
    "2514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2518": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "ADD",
      "path": "5"
    },
    "2519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196C"
    },
    "2523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x31"
    },
    "2525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "ADD",
      "path": "5"
    },
    "2530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "POP",
      "path": "5"
    },
    "2532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "POP",
      "path": "5"
    },
    "2533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "SUB",
      "path": "5"
    },
    "2539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8640,
        8743
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8753,
        8792
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0x9F9"
    },
    "2545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8767,
        8771
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8773,
        8775
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8777,
        8784
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8786,
        8791
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8753,
        8766
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8B"
    },
    "2552": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8753,
        8792
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8753,
        8792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "POP",
      "path": "5"
    },
    "2555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "POP",
      "path": "5"
    },
    "2556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "POP",
      "path": "5"
    },
    "2557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8517,
        8799
      ],
      "op": "POP",
      "path": "5"
    },
    "2558": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        8517,
        8799
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4860,
        4873
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2562": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4893,
        4909
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 22,
      "value": "0xA0A"
    },
    "2565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4901,
        4908
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2566": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4893,
        4900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD2"
    },
    "2569": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        4893,
        4909
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2570": {
      "branch": 95,
      "fn": "ERC721.tokenURI",
      "offset": [
        4893,
        4909
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2571": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA45"
    },
    "2574": {
      "branch": 95,
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2577": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "ADD",
      "path": "5"
    },
    "2590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2591": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "ADD",
      "path": "5"
    },
    "2595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "SUB",
      "path": "5"
    },
    "2598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2600": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2F"
    },
    "2602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2606": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "ADD",
      "path": "5"
    },
    "2607": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2608": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x191C"
    },
    "2611": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2F"
    },
    "2613": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2614": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2615": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2617": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "ADD",
      "path": "5"
    },
    "2618": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2619": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "POP",
      "path": "5"
    },
    "2620": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "POP",
      "path": "5"
    },
    "2621": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2623": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2624": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2625": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2626": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "SUB",
      "path": "5"
    },
    "2627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2629": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4885,
        4961
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2630": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2632": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2633": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2634": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2635": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2637": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2639": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2640": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2641": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2642": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2647": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2648": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2649": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2650": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2651": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2653": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2655": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2656": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "AND",
      "path": "5"
    },
    "2657": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2658": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2661": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MUL",
      "path": "5"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "NOT"
    },
    "2665": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2666": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2667": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2668": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "AND",
      "path": "5"
    },
    "2669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2672": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DIV",
      "path": "5"
    },
    "2673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2678": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2679": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DIV",
      "path": "5"
    },
    "2680": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2681": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MUL",
      "path": "5"
    },
    "2682": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2683": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2684": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2685": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2686": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2687": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2688": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2689": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2690": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2691": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2692": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2693": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2694": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2695": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2696": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2697": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2698": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4998,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2699": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2700": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2701": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2702": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD8"
    },
    "2705": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2706": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2707": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2709": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "LT",
      "path": "5"
    },
    "2710": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAD"
    },
    "2713": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2714": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2717": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2718": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2719": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2720": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DIV",
      "path": "5"
    },
    "2721": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MUL",
      "path": "5"
    },
    "2722": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2723": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2724": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2725": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2727": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2728": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2729": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD8"
    },
    "2732": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2733": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2734": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2735": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2740": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2741": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2743": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2746": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2749": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2753": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2756": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2759": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2760": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "GT",
      "path": "5"
    },
    "2763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xABB"
    },
    "2766": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2767": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SUB",
      "path": "5"
    },
    "2770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2772": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "AND",
      "path": "5"
    },
    "2773": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "ADD",
      "path": "5"
    },
    "2775": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2776": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "op": "POP"
    },
    "2779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5096,
        5104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "2781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        5017
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2784": {
      "op": "POP"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "op": "POP"
    },
    "2788": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2792": {
      "op": "NOT"
    },
    "2793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "AND",
      "path": "5"
    },
    "2800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "MUL",
      "path": "5"
    },
    "2802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "ADD",
      "path": "5"
    },
    "2803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "AND",
      "path": "5"
    },
    "2806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5090,
        5112
      ],
      "op": "DIV",
      "path": "5"
    },
    "2807": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5086,
        5160
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB01"
    },
    "2810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5086,
        5160
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5140,
        5149
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 23
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5133,
        5149
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AE"
    },
    "2816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5133,
        5149
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2817": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5086,
        5160
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2818": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5262,
        5285
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5262,
        5285
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2820": {
      "branch": 96,
      "fn": "ERC721.tokenURI",
      "offset": [
        5262,
        5289
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2821": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5258,
        5368
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD2"
    },
    "2824": {
      "branch": 96,
      "fn": "ERC721.tokenURI",
      "offset": [
        5258,
        5368
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5336,
        5344
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x9"
    },
    "2827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5346,
        5355
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2828": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2834": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2835": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "AND",
      "path": "5"
    },
    "2844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MUL",
      "path": "5"
    },
    "2849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SUB",
      "path": "5"
    },
    "2850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "AND",
      "path": "5"
    },
    "2851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DIV",
      "path": "5"
    },
    "2855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB69"
    },
    "2860": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2861": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2862": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2864": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "LT",
      "path": "5"
    },
    "2865": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB47"
    },
    "2868": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2869": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2872": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2873": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2874": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2875": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DIV",
      "path": "5"
    },
    "2876": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MUL",
      "path": "5"
    },
    "2877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2878": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2879": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2880": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2881": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2882": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2883": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB69"
    },
    "2886": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2887": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2888": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2889": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2890": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2891": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2892": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2894": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2895": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2899": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2900": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2901": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2904": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2905": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2906": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2907": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2909": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2910": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2911": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2913": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2914": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2915": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2916": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "GT",
      "path": "5"
    },
    "2917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB55"
    },
    "2920": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2921": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "op": "POP"
    },
    "2924": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2925": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2926": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2928": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2929": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2930": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2934": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "LT",
      "path": "5"
    },
    "2939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB95"
    },
    "2942": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2943": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2944": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2945": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2946": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2949": {
      "op": "NOT"
    },
    "2950": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2951": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2952": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2953": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2954": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2956": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2957": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "2961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB76"
    },
    "2964": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2968": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2969": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SUB",
      "path": "5"
    },
    "2972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2975": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "EXP",
      "path": "5"
    },
    "2976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SUB",
      "path": "5"
    },
    "2977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "NOT",
      "path": "5"
    },
    "2979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "AND",
      "path": "5"
    },
    "2982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "AND",
      "path": "5"
    },
    "2986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "OR",
      "path": "5"
    },
    "2989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2995": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2998": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "2999": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "ADD",
      "path": "5"
    },
    "3000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "3002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "3003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "POP",
      "path": "5"
    },
    "3004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3010": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3011": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SUB",
      "path": "5"
    },
    "3012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SUB",
      "path": "5"
    },
    "3013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3015": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3016": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5319,
        5356
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3019": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5305,
        5357
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5305,
        5357
      ],
      "op": "POP",
      "path": "5"
    },
    "3021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5305,
        5357
      ],
      "op": "POP",
      "path": "5"
    },
    "3022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5305,
        5357
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AE"
    },
    "3025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5305,
        5357
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5258,
        5368
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5498,
        5506
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x9"
    },
    "3029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5508,
        5526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBDD"
    },
    "3032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5508,
        5515
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3033": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5508,
        5524
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFDD"
    },
    "3036": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5508,
        5526
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3037": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5508,
        5526
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3038": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3040": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3041": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3043": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3044": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3045": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3046": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3048": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3050": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3051": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "AND",
      "path": "5"
    },
    "3054": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3055": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3058": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MUL",
      "path": "5"
    },
    "3059": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SUB",
      "path": "5"
    },
    "3060": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "AND",
      "path": "5"
    },
    "3061": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3063": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3064": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DIV",
      "path": "5"
    },
    "3065": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3066": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3067": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3B"
    },
    "3070": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3071": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3072": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "LT",
      "path": "5"
    },
    "3075": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC19"
    },
    "3078": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3079": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3082": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3083": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3084": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3085": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DIV",
      "path": "5"
    },
    "3086": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MUL",
      "path": "5"
    },
    "3087": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3088": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3089": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3090": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3091": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3092": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3B"
    },
    "3096": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3097": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3098": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3105": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3109": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3112": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3116": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3119": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3120": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3121": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3123": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3124": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3125": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3126": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "GT",
      "path": "5"
    },
    "3127": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC27"
    },
    "3130": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3131": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3135": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3136": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3138": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3139": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3140": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3141": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3142": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3143": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3144": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3145": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3147": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3148": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "LT",
      "path": "5"
    },
    "3149": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC67"
    },
    "3152": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3153": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3154": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3155": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3156": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3159": {
      "op": "NOT"
    },
    "3160": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3161": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3162": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3163": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3164": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3166": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3167": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3168": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3169": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3170": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3171": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC48"
    },
    "3174": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3175": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3176": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3178": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3179": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3181": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SUB",
      "path": "5"
    },
    "3182": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3185": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "EXP",
      "path": "5"
    },
    "3186": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SUB",
      "path": "5"
    },
    "3187": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3188": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "NOT",
      "path": "5"
    },
    "3189": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3190": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3191": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "AND",
      "path": "5"
    },
    "3192": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3193": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3194": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3195": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "AND",
      "path": "5"
    },
    "3196": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3197": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3198": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "OR",
      "path": "5"
    },
    "3199": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3200": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3201": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3202": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3203": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3204": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3205": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3206": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3207": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3208": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3209": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "ADD",
      "path": "5"
    },
    "3210": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3211": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3212": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3213": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "POP",
      "path": "5"
    },
    "3214": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3216": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3217": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3219": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3220": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3221": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SUB",
      "path": "5"
    },
    "3222": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SUB",
      "path": "5"
    },
    "3223": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3224": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3225": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3226": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3228": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5481,
        5527
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3229": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5467,
        5528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3230": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5467,
        5528
      ],
      "op": "POP",
      "path": "5"
    },
    "3231": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5467,
        5528
      ],
      "op": "POP",
      "path": "5"
    },
    "3232": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3233": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3234": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4795,
        5535
      ],
      "op": "POP",
      "path": "5"
    },
    "3235": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        4795,
        5535
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3236": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7720,
        7874
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3243": {
      "op": "SHL"
    },
    "3244": {
      "op": "SUB"
    },
    "3245": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 26
    },
    "3246": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3247": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "AND",
      "path": "5"
    },
    "3248": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7809,
        7813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3250": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3251": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3252": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3253": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7850
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3255": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3257": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3258": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3259": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3260": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3262": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3263": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7857
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "AND",
      "path": "5"
    },
    "3269": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3270": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3274": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3276": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3277": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "AND",
      "path": "5"
    },
    "3280": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7832,
        7867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3281": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        7720,
        7874
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3282": {
      "fn": "ERC721._exists",
      "offset": [
        10232,
        10349
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3283": {
      "fn": "ERC721._exists",
      "offset": [
        10289,
        10293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3285": {
      "fn": "ERC721._exists",
      "offset": [
        10312,
        10342
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 27,
      "value": "0x713"
    },
    "3288": {
      "fn": "ERC721._exists",
      "offset": [
        10312,
        10324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3290": {
      "fn": "ERC721._exists",
      "offset": [
        10334,
        10341
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3291": {
      "fn": "ERC721._exists",
      "offset": [
        10312,
        10333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B8"
    },
    "3294": {
      "fn": "ERC721._exists",
      "jump": "i",
      "offset": [
        10312,
        10342
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3295": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3296": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 28
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3298": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3299": {
      "fn": "ERC721._approve",
      "offset": [
        15888,
        16043
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3300": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x0"
    },
    "3302": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3303": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3304": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3305": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15968
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3307": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3309": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3310": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3312": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3313": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3314": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3315": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3322": {
      "op": "SHL"
    },
    "3323": {
      "op": "SUB"
    },
    "3324": {
      "op": "NOT"
    },
    "3325": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "AND",
      "path": "5"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3332": {
      "op": "SHL"
    },
    "3333": {
      "op": "SUB"
    },
    "3334": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3335": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "AND",
      "path": "5"
    },
    "3336": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3337": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3338": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "OR",
      "path": "5"
    },
    "3339": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3340": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3341": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15982
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3342": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3343": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3344": {
      "fn": "ERC721._approve",
      "offset": [
        16006,
        16022
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 30,
      "value": "0xD18"
    },
    "3347": {
      "fn": "ERC721._approve",
      "offset": [
        15953,
        15977
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3348": {
      "fn": "ERC721._approve",
      "offset": [
        16006,
        16013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74A"
    },
    "3351": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        16006,
        16022
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3352": {
      "fn": "ERC721._approve",
      "offset": [
        16006,
        16022
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "AND",
      "path": "5"
    },
    "3362": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3395": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3397": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3398": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3400": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3401": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3402": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3403": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "SUB",
      "path": "5"
    },
    "3404": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3405": {
      "fn": "ERC721._approve",
      "offset": [
        15997,
        16036
      ],
      "op": "LOG4",
      "path": "5"
    },
    "3406": {
      "fn": "ERC721._approve",
      "offset": [
        15888,
        16043
      ],
      "op": "POP",
      "path": "5"
    },
    "3407": {
      "fn": "ERC721._approve",
      "offset": [
        15888,
        16043
      ],
      "op": "POP",
      "path": "5"
    },
    "3408": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        15888,
        16043
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3409": {
      "fn": "EnumerableMap.length",
      "offset": [
        7023,
        7144
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3410": {
      "fn": "EnumerableMap.length",
      "offset": [
        7092,
        7099
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3412": {
      "fn": "EnumerableMap.length",
      "offset": [
        7118,
        7137
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 31,
      "value": "0x713"
    },
    "3415": {
      "fn": "EnumerableMap.length",
      "offset": [
        7126,
        7129
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3416": {
      "fn": "EnumerableMap.length",
      "offset": [
        7118,
        7125
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10C4"
    },
    "3419": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        7118,
        7137
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3420": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10507,
        10836
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3421": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10592,
        10596
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10616,
        10632
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 32,
      "value": "0xD67"
    },
    "3426": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10624,
        10631
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3427": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10616,
        10623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD2"
    },
    "3430": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10616,
        10632
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3431": {
      "branch": 97,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10616,
        10632
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3432": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA2"
    },
    "3435": {
      "branch": 97,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3436": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3438": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3439": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3445": {
      "op": "SHL"
    },
    "3446": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3447": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3448": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3450": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3451": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3452": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3453": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3455": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3456": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3457": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3458": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "SUB",
      "path": "5"
    },
    "3459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3461": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2C"
    },
    "3463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3464": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3465": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3467": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3468": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3469": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17EE"
    },
    "3472": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2C"
    },
    "3474": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3475": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "3476": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3478": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3479": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3481": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3482": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3484": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3485": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3486": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3487": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "SUB",
      "path": "5"
    },
    "3488": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3489": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3490": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10608,
        10681
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3491": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10691,
        10704
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3493": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10707,
        10723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAD"
    },
    "3496": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10715,
        10722
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3497": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10707,
        10714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74A"
    },
    "3500": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10707,
        10723
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3501": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10707,
        10723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3502": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10691,
        10723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3503": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10691,
        10723
      ],
      "op": "POP",
      "path": "5"
    },
    "3504": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10752,
        10757
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 33
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3511": {
      "op": "SHL"
    },
    "3512": {
      "op": "SUB"
    },
    "3513": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10757
      ],
      "op": "AND",
      "path": "5"
    },
    "3514": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10748
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3521": {
      "op": "SHL"
    },
    "3522": {
      "op": "SUB"
    },
    "3523": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10757
      ],
      "op": "AND",
      "path": "5"
    },
    "3524": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10757
      ],
      "op": "EQ",
      "path": "5"
    },
    "3525": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10792
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3526": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10792
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE8"
    },
    "3529": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10792
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3530": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10792
      ],
      "op": "POP",
      "path": "5"
    },
    "3531": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10785,
        10792
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "SUB"
    },
    "3540": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10761,
        10792
      ],
      "op": "AND",
      "path": "5"
    },
    "3541": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10761,
        10781
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDDD"
    },
    "3544": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10773,
        10780
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3545": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10761,
        10772
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x549"
    },
    "3548": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10761,
        10781
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3549": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10761,
        10781
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "op": "SUB"
    },
    "3558": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10761,
        10792
      ],
      "op": "AND",
      "path": "5"
    },
    "3559": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10761,
        10792
      ],
      "op": "EQ",
      "path": "5"
    },
    "3560": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3561": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10828
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3562": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10828
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF8"
    },
    "3565": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10828
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3566": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10741,
        10828
      ],
      "op": "POP",
      "path": "5"
    },
    "3567": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10796,
        10828
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF8"
    },
    "3570": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10813,
        10818
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3571": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10820,
        10827
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3572": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10796,
        10812
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA4"
    },
    "3575": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10796,
        10828
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3576": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10796,
        10828
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3577": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10733,
        10829
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3578": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10507,
        10836
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        10507,
        10836
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3584": {
      "fn": "ERC721._transfer",
      "offset": [
        13501,
        14060
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3585": {
      "fn": "ERC721._transfer",
      "offset": [
        13618,
        13622
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 34
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3592": {
      "op": "SHL"
    },
    "3593": {
      "op": "SUB"
    },
    "3594": {
      "fn": "ERC721._transfer",
      "offset": [
        13598,
        13622
      ],
      "op": "AND",
      "path": "5"
    },
    "3595": {
      "fn": "ERC721._transfer",
      "offset": [
        13598,
        13614
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE13"
    },
    "3598": {
      "fn": "ERC721._transfer",
      "offset": [
        13606,
        13613
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3599": {
      "fn": "ERC721._transfer",
      "offset": [
        13598,
        13605
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74A"
    },
    "3602": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13598,
        13614
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3603": {
      "fn": "ERC721._transfer",
      "offset": [
        13598,
        13614
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3610": {
      "op": "SHL"
    },
    "3611": {
      "op": "SUB"
    },
    "3612": {
      "fn": "ERC721._transfer",
      "offset": [
        13598,
        13622
      ],
      "op": "AND",
      "path": "5"
    },
    "3613": {
      "branch": 98,
      "fn": "ERC721._transfer",
      "offset": [
        13598,
        13622
      ],
      "op": "EQ",
      "path": "5"
    },
    "3614": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE58"
    },
    "3617": {
      "branch": 98,
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3618": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3620": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3627": {
      "op": "SHL"
    },
    "3628": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3629": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3630": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3632": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "ADD",
      "path": "5"
    },
    "3633": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3634": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3635": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3637": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "ADD",
      "path": "5"
    },
    "3638": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3639": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3640": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "SUB",
      "path": "5"
    },
    "3641": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3642": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3643": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "3645": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3646": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3647": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3649": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "ADD",
      "path": "5"
    },
    "3650": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3651": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F3"
    },
    "3654": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "3656": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3657": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "3658": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3660": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "ADD",
      "path": "5"
    },
    "3661": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3662": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "POP",
      "path": "5"
    },
    "3663": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "POP",
      "path": "5"
    },
    "3664": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3666": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3667": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3668": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3669": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "SUB",
      "path": "5"
    },
    "3670": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3671": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3672": {
      "fn": "ERC721._transfer",
      "offset": [
        13590,
        13668
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3679": {
      "op": "SHL"
    },
    "3680": {
      "op": "SUB"
    },
    "3681": {
      "fn": "ERC721._transfer",
      "offset": [
        13686,
        13702
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 35
    },
    "3682": {
      "branch": 99,
      "fn": "ERC721._transfer",
      "offset": [
        13686,
        13702
      ],
      "op": "AND",
      "path": "5"
    },
    "3683": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE9D"
    },
    "3686": {
      "branch": 99,
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3687": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3689": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3696": {
      "op": "SHL"
    },
    "3697": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3698": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3699": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3701": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "ADD",
      "path": "5"
    },
    "3702": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3703": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3704": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3706": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "ADD",
      "path": "5"
    },
    "3707": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3708": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3709": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "SUB",
      "path": "5"
    },
    "3710": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3711": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3712": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3714": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3715": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3716": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3718": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "ADD",
      "path": "5"
    },
    "3719": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3720": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17CA"
    },
    "3723": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3725": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3726": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "3727": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3729": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "ADD",
      "path": "5"
    },
    "3730": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3731": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "POP",
      "path": "5"
    },
    "3732": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "POP",
      "path": "5"
    },
    "3733": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3735": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3736": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3737": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3738": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "SUB",
      "path": "5"
    },
    "3739": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3740": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3741": {
      "fn": "ERC721._transfer",
      "offset": [
        13678,
        13743
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3742": {
      "fn": "ERC721._transfer",
      "offset": [
        13754,
        13793
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0xEA8"
    },
    "3745": {
      "fn": "ERC721._transfer",
      "offset": [
        13775,
        13779
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3746": {
      "fn": "ERC721._transfer",
      "offset": [
        13781,
        13783
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3747": {
      "fn": "ERC721._transfer",
      "offset": [
        13785,
        13792
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3748": {
      "fn": "ERC721._transfer",
      "offset": [
        13754,
        13774
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x681"
    },
    "3751": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13754,
        13793
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3752": {
      "fn": "ERC721._transfer",
      "offset": [
        13754,
        13793
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3753": {
      "fn": "ERC721._transfer",
      "offset": [
        13855,
        13884
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 37,
      "value": "0xEB3"
    },
    "3756": {
      "fn": "ERC721._transfer",
      "offset": [
        13872,
        13873
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3758": {
      "fn": "ERC721._transfer",
      "offset": [
        13876,
        13883
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3759": {
      "fn": "ERC721._transfer",
      "offset": [
        13855,
        13863
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE3"
    },
    "3762": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13855,
        13884
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3763": {
      "fn": "ERC721._transfer",
      "offset": [
        13855,
        13884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 38
    },
    "3773": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "AND",
      "path": "5"
    },
    "3774": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3776": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3777": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3778": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3779": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13908
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3781": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3783": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3784": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3786": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3787": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13914
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3788": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13930
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xED5"
    },
    "3791": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13930
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3792": {
      "fn": "ERC721._transfer",
      "offset": [
        13922,
        13929
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3793": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13921
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C8"
    },
    "3796": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13895,
        13930
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3797": {
      "fn": "ERC721._transfer",
      "offset": [
        13895,
        13930
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3805": {
      "op": "SHL"
    },
    "3806": {
      "op": "SUB"
    },
    "3807": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 39
    },
    "3808": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "AND",
      "path": "5"
    },
    "3809": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3811": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3812": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3813": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3814": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3816": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3818": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3819": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3821": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3822": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13957
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3823": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEF8"
    },
    "3826": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13970
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3827": {
      "fn": "ERC721._transfer",
      "offset": [
        13962,
        13969
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3828": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D4"
    },
    "3831": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13940,
        13970
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3832": {
      "fn": "ERC721._transfer",
      "offset": [
        13940,
        13970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "fn": "ERC721._transfer",
      "offset": [
        13981,
        14010
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 40,
      "value": "0xF05"
    },
    "3837": {
      "fn": "ERC721._transfer",
      "offset": [
        13981,
        13993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3839": {
      "fn": "ERC721._transfer",
      "offset": [
        13998,
        14005
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3840": {
      "fn": "ERC721._transfer",
      "offset": [
        14007,
        14009
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3841": {
      "fn": "ERC721._transfer",
      "offset": [
        13981,
        13997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E0"
    },
    "3844": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13981,
        14010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3845": {
      "fn": "ERC721._transfer",
      "offset": [
        13981,
        14010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3846": {
      "fn": "ERC721._transfer",
      "offset": [
        13981,
        14010
      ],
      "op": "POP",
      "path": "5"
    },
    "3847": {
      "fn": "ERC721._transfer",
      "offset": [
        14045,
        14052
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 41
    },
    "3848": {
      "fn": "ERC721._transfer",
      "offset": [
        14041,
        14043
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3855": {
      "op": "SHL"
    },
    "3856": {
      "op": "SUB"
    },
    "3857": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "AND",
      "path": "5"
    },
    "3858": {
      "fn": "ERC721._transfer",
      "offset": [
        14035,
        14039
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "AND",
      "path": "5"
    },
    "3868": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3901": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3903": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3904": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3906": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3907": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3908": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3909": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "SUB",
      "path": "5"
    },
    "3910": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3911": {
      "fn": "ERC721._transfer",
      "offset": [
        14026,
        14053
      ],
      "op": "LOG4",
      "path": "5"
    },
    "3912": {
      "fn": "ERC721._transfer",
      "offset": [
        13501,
        14060
      ],
      "op": "POP",
      "path": "5"
    },
    "3913": {
      "fn": "ERC721._transfer",
      "offset": [
        13501,
        14060
      ],
      "op": "POP",
      "path": "5"
    },
    "3914": {
      "fn": "ERC721._transfer",
      "offset": [
        13501,
        14060
      ],
      "op": "POP",
      "path": "5"
    },
    "3915": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        13501,
        14060
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3916": {
      "fn": "EnumerableSet.at",
      "offset": [
        7649,
        7784
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3917": {
      "fn": "EnumerableSet.at",
      "offset": [
        7720,
        7727
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3919": {
      "fn": "EnumerableSet.at",
      "offset": [
        7754,
        7776
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 42,
      "value": "0x710"
    },
    "3922": {
      "fn": "EnumerableSet.at",
      "offset": [
        7758,
        7761
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3923": {
      "fn": "EnumerableSet.at",
      "offset": [
        7770,
        7775
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3924": {
      "fn": "EnumerableSet.at",
      "offset": [
        7754,
        7757
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10F6"
    },
    "3927": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7754,
        7776
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3928": {
      "fn": "EnumerableMap.at",
      "offset": [
        7472,
        7696
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3929": {
      "fn": "EnumerableMap.at",
      "offset": [
        7552,
        7559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3931": {
      "fn": "EnumerableMap.at",
      "offset": [
        7552,
        7559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3932": {
      "fn": "EnumerableMap.at",
      "offset": [
        7552,
        7559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3933": {
      "fn": "EnumerableMap.at",
      "offset": [
        7552,
        7559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3934": {
      "fn": "EnumerableMap.at",
      "offset": [
        7611,
        7633
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF67"
    },
    "3937": {
      "fn": "EnumerableMap.at",
      "offset": [
        7615,
        7618
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3938": {
      "fn": "EnumerableMap.at",
      "offset": [
        7627,
        7632
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3939": {
      "fn": "EnumerableMap.at",
      "offset": [
        7611,
        7614
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x115A"
    },
    "3942": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        7611,
        7633
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3943": {
      "fn": "EnumerableMap.at",
      "offset": [
        7611,
        7633
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3944": {
      "fn": "EnumerableMap.at",
      "offset": [
        7580,
        7633
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3945": {
      "fn": "EnumerableMap.at",
      "offset": [
        7580,
        7633
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "3946": {
      "fn": "EnumerableMap.at",
      "offset": [
        7580,
        7633
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3947": {
      "fn": "EnumerableMap.at",
      "offset": [
        7580,
        7633
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "3948": {
      "op": "POP"
    },
    "3949": {
      "fn": "EnumerableMap.at",
      "offset": [
        7472,
        7696
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "op": "POP"
    },
    "3952": {
      "op": "POP"
    },
    "3953": {
      "op": "POP"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        7472,
        7696
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3956": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3957": {
      "fn": "EnumerableMap.get",
      "offset": [
        8222,
        8229
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3959": {
      "fn": "EnumerableMap.get",
      "offset": [
        8264,
        8308
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 43,
      "value": "0xF81"
    },
    "3962": {
      "fn": "EnumerableMap.get",
      "offset": [
        8269,
        8272
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3963": {
      "fn": "EnumerableMap.get",
      "offset": [
        8289,
        8292
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3964": {
      "fn": "EnumerableMap.get",
      "offset": [
        8295,
        8307
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3965": {
      "fn": "EnumerableMap.get",
      "offset": [
        8264,
        8268
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11D5"
    },
    "3968": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        8264,
        8308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3969": {
      "fn": "EnumerableMap.get",
      "offset": [
        8264,
        8308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3970": {
      "fn": "EnumerableMap.get",
      "offset": [
        8256,
        8309
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3973": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3974": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3975": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "POP",
      "path": "12"
    },
    "3976": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "POP",
      "path": "12"
    },
    "3977": {
      "fn": "EnumerableMap.get",
      "offset": [
        8115,
        8317
      ],
      "op": "POP",
      "path": "12"
    },
    "3978": {
      "fn": "EnumerableMap.get",
      "jump": "o",
      "offset": [
        8115,
        8317
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3979": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9660,
        9929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3980": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9773,
        9801
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 44,
      "value": "0xF96"
    },
    "3983": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9783,
        9787
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3984": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9789,
        9791
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3985": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9793,
        9800
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3986": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9773,
        9782
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE00"
    },
    "3989": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        9773,
        9801
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3990": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9773,
        9801
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3991": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9819,
        9867
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 45,
      "value": "0xFA2"
    },
    "3994": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9842,
        9846
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3995": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9848,
        9850
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3996": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9852,
        9859
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3997": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9861,
        9866
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3998": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9819,
        9841
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129F"
    },
    "4001": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        9819,
        9867
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4002": {
      "branch": 100,
      "fn": "ERC721._safeTransfer",
      "offset": [
        9819,
        9867
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4003": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F9"
    },
    "4006": {
      "branch": 100,
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4007": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4009": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4018": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4019": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4021": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "ADD",
      "path": "5"
    },
    "4022": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4023": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4024": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4026": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "ADD",
      "path": "5"
    },
    "4027": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4028": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4029": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "SUB",
      "path": "5"
    },
    "4030": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4031": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4032": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "4034": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4035": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4036": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4038": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "ADD",
      "path": "5"
    },
    "4039": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4040": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1798"
    },
    "4043": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "4045": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4046": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "4047": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4049": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "ADD",
      "path": "5"
    },
    "4050": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4051": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "POP",
      "path": "5"
    },
    "4052": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "POP",
      "path": "5"
    },
    "4053": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4055": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4056": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4057": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4058": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "SUB",
      "path": "5"
    },
    "4059": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4060": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        9922
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4061": {
      "fn": "Strings.toString",
      "offset": [
        202,
        925
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4062": {
      "fn": "Strings.toString",
      "offset": [
        258,
        271
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4064": {
      "branch": 111,
      "fn": "Strings.toString",
      "offset": [
        475,
        485
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4065": {
      "fn": "Strings.toString",
      "offset": [
        471,
        522
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1002"
    },
    "4068": {
      "branch": 111,
      "fn": "Strings.toString",
      "offset": [
        471,
        522
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 46,
      "value": "0x40"
    },
    "4072": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4073": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4074": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4075": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4076": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "ADD",
      "path": "14"
    },
    "4077": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4078": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4079": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4080": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4082": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4083": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4088": {
      "op": "SHL"
    },
    "4089": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4091": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4092": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "ADD",
      "path": "14"
    },
    "4093": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4094": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AE"
    },
    "4097": {
      "fn": "Strings.toString",
      "offset": [
        501,
        511
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4098": {
      "fn": "Strings.toString",
      "offset": [
        471,
        522
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4099": {
      "fn": "Strings.toString",
      "offset": [
        546,
        551
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4100": {
      "fn": "Strings.toString",
      "offset": [
        531,
        543
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4102": {
      "fn": "Strings.toString",
      "offset": [
        585,
        660
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4103": {
      "fn": "Strings.toString",
      "offset": [
        592,
        601
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4104": {
      "fn": "Strings.toString",
      "offset": [
        592,
        601
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4105": {
      "fn": "Strings.toString",
      "offset": [
        585,
        660
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x101A"
    },
    "4108": {
      "fn": "Strings.toString",
      "offset": [
        585,
        660
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4109": {
      "fn": "Strings.toString",
      "offset": [
        617,
        625
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 47,
      "value": "0x1"
    },
    "4111": {
      "fn": "Strings.toString",
      "offset": [
        617,
        625
      ],
      "op": "ADD",
      "path": "14"
    },
    "4112": {
      "fn": "Strings.toString",
      "offset": [
        647,
        649
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 48,
      "value": "0xA"
    },
    "4114": {
      "fn": "Strings.toString",
      "offset": [
        639,
        649
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4115": {
      "fn": "Strings.toString",
      "offset": [
        639,
        649
      ],
      "op": "DIV",
      "path": "14"
    },
    "4116": {
      "fn": "Strings.toString",
      "offset": [
        639,
        649
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4117": {
      "fn": "Strings.toString",
      "offset": [
        639,
        649
      ],
      "op": "POP",
      "path": "14"
    },
    "4118": {
      "fn": "Strings.toString",
      "offset": [
        585,
        660
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1006"
    },
    "4121": {
      "fn": "Strings.toString",
      "offset": [
        585,
        660
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4122": {
      "fn": "Strings.toString",
      "offset": [
        585,
        660
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4123": {
      "fn": "Strings.toString",
      "offset": [
        669,
        688
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4125": {
      "fn": "Strings.toString",
      "offset": [
        701,
        707
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4126": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH8",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4135": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4136": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "GT",
      "path": "14"
    },
    "4137": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4138": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4139": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1033"
    },
    "4142": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4143": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4145": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4146": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4147": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4148": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "POP",
      "path": "14"
    },
    "4149": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4151": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4152": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4153": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4154": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4155": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4156": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4157": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4159": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ADD",
      "path": "14"
    },
    "4160": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4162": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "NOT",
      "path": "14"
    },
    "4163": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "AND",
      "path": "14"
    },
    "4164": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4166": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ADD",
      "path": "14"
    },
    "4167": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4168": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ADD",
      "path": "14"
    },
    "4169": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4171": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4172": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4173": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4174": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x105E"
    },
    "4177": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4178": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4180": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4181": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ADD",
      "path": "14"
    },
    "4182": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4183": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4184": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4185": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4186": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "4187": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "ADD",
      "path": "14"
    },
    "4188": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "fn": "Strings.toString",
      "offset": [
        691,
        708
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "fn": "Strings.toString",
      "offset": [
        761,
        766
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 49
    },
    "4193": {
      "fn": "Strings.toString",
      "offset": [
        761,
        766
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "fn": "Strings.toString",
      "offset": [
        669,
        708
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "NOT"
    },
    "4200": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4201": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "ADD",
      "path": "14"
    },
    "4202": {
      "fn": "Strings.toString",
      "offset": [
        776,
        888
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4203": {
      "fn": "Strings.toString",
      "offset": [
        783,
        792
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4204": {
      "fn": "Strings.toString",
      "offset": [
        783,
        792
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4205": {
      "fn": "Strings.toString",
      "offset": [
        776,
        888
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10AF"
    },
    "4208": {
      "fn": "Strings.toString",
      "offset": [
        776,
        888
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4209": {
      "fn": "Strings.toString",
      "offset": [
        849,
        851
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 50,
      "value": "0xA"
    },
    "4211": {
      "fn": "Strings.toString",
      "offset": [
        842,
        846
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4212": {
      "fn": "Strings.toString",
      "offset": [
        842,
        851
      ],
      "op": "MOD",
      "path": "14"
    },
    "4213": {
      "fn": "Strings.toString",
      "offset": [
        837,
        839
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "4215": {
      "fn": "Strings.toString",
      "offset": [
        837,
        851
      ],
      "op": "ADD",
      "path": "14"
    },
    "4216": {
      "fn": "Strings.toString",
      "offset": [
        826,
        853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "4218": {
      "fn": "Strings.toString",
      "offset": [
        826,
        853
      ],
      "op": "SHL",
      "path": "14"
    },
    "4219": {
      "fn": "Strings.toString",
      "offset": [
        808,
        814
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4220": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4221": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4222": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4224": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4225": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "SUB",
      "path": "14"
    },
    "4226": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4227": {
      "fn": "Strings.toString",
      "offset": [
        815,
        822
      ],
      "op": "POP",
      "path": "14"
    },
    "4228": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4229": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4230": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4231": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "LT",
      "path": "14"
    },
    "4232": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x108D"
    },
    "4235": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4236": {
      "dev": "Index out of range",
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "INVALID",
      "path": "14"
    },
    "4237": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4238": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4240": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "ADD",
      "path": "14"
    },
    "4241": {
      "fn": "Strings.toString",
      "offset": [
        808,
        823
      ],
      "op": "ADD",
      "path": "14"
    },
    "4242": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4249": {
      "op": "SHL"
    },
    "4250": {
      "op": "SUB"
    },
    "4251": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "NOT",
      "path": "14"
    },
    "4252": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "AND",
      "path": "14"
    },
    "4253": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4254": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4255": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4257": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "BYTE",
      "path": "14"
    },
    "4258": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4259": {
      "fn": "Strings.toString",
      "offset": [
        808,
        853
      ],
      "op": "MSTORE8",
      "path": "14"
    },
    "4260": {
      "op": "POP"
    },
    "4261": {
      "fn": "Strings.toString",
      "offset": [
        875,
        877
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 51,
      "value": "0xA"
    },
    "4263": {
      "fn": "Strings.toString",
      "offset": [
        867,
        877
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4264": {
      "fn": "Strings.toString",
      "offset": [
        867,
        877
      ],
      "op": "DIV",
      "path": "14"
    },
    "4265": {
      "fn": "Strings.toString",
      "offset": [
        867,
        877
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4266": {
      "fn": "Strings.toString",
      "offset": [
        867,
        877
      ],
      "op": "POP",
      "path": "14"
    },
    "4267": {
      "fn": "Strings.toString",
      "offset": [
        776,
        888
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x106A"
    },
    "4270": {
      "fn": "Strings.toString",
      "offset": [
        776,
        888
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4271": {
      "fn": "Strings.toString",
      "offset": [
        776,
        888
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "fn": "Strings.toString",
      "offset": [
        911,
        917
      ],
      "op": "SWAP5",
      "path": "14",
      "statement": 52
    },
    "4274": {
      "fn": "Strings.toString",
      "offset": [
        202,
        925
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        202,
        925
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4280": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6791,
        6940
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4281": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6875,
        6879
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4283": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6898,
        6933
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 53,
      "value": "0x710"
    },
    "4286": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6908,
        6911
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4287": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6928,
        6931
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4288": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6898,
        6907
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1407"
    },
    "4291": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        6898,
        6933
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4292": {
      "fn": "EnumerableMap._length",
      "offset": [
        4483,
        4591
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4293": {
      "fn": "EnumerableMap._length",
      "offset": [
        4565,
        4584
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 54
    },
    "4294": {
      "fn": "EnumerableMap._length",
      "offset": [
        4565,
        4584
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4295": {
      "fn": "EnumerableMap._length",
      "jump": "o",
      "offset": [
        4483,
        4591
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4296": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6764,
        6899
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4297": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6834,
        6838
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4299": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6857,
        6892
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 55,
      "value": "0x710"
    },
    "4302": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6865,
        6868
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4303": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6885,
        6890
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4304": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6857,
        6864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x141F"
    },
    "4307": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6857,
        6892
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4308": {
      "fn": "EnumerableSet.add",
      "offset": [
        6467,
        6596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4309": {
      "fn": "EnumerableSet.add",
      "offset": [
        6534,
        6538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4311": {
      "fn": "EnumerableSet.add",
      "offset": [
        6557,
        6589
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 56,
      "value": "0x710"
    },
    "4314": {
      "fn": "EnumerableSet.add",
      "offset": [
        6562,
        6565
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4315": {
      "fn": "EnumerableSet.add",
      "offset": [
        6582,
        6587
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4316": {
      "fn": "EnumerableSet.add",
      "offset": [
        6557,
        6561
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E5"
    },
    "4319": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6557,
        6589
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4320": {
      "fn": "EnumerableMap.set",
      "offset": [
        6239,
        6413
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4321": {
      "fn": "EnumerableMap.set",
      "offset": [
        6328,
        6332
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4323": {
      "fn": "EnumerableMap.set",
      "offset": [
        6351,
        6406
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 57,
      "value": "0xF81"
    },
    "4326": {
      "fn": "EnumerableMap.set",
      "offset": [
        6356,
        6359
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4327": {
      "fn": "EnumerableMap.set",
      "offset": [
        6376,
        6379
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "op": "SUB"
    },
    "4336": {
      "fn": "EnumerableMap.set",
      "offset": [
        6390,
        6404
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4337": {
      "fn": "EnumerableMap.set",
      "offset": [
        6390,
        6404
      ],
      "op": "AND",
      "path": "12"
    },
    "4338": {
      "fn": "EnumerableMap.set",
      "offset": [
        6351,
        6355
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x152F"
    },
    "4341": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        6351,
        6406
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4342": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4343": {
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4535
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 58
    },
    "4344": {
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4535
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4345": {
      "fn": "EnumerableSet._at",
      "offset": [
        4490,
        4497
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4490,
        4497
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4348": {
      "branch": 108,
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4543
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4349": {
      "op": "LT"
    },
    "4350": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1138"
    },
    "4353": {
      "branch": 108,
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4354": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4356": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4363": {
      "op": "SHL"
    },
    "4364": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4365": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4366": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4368": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "13"
    },
    "4369": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4370": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4371": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4373": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "13"
    },
    "4374": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4375": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4376": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SUB",
      "path": "13"
    },
    "4377": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4378": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4379": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x22"
    },
    "4381": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4382": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4383": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4385": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "13"
    },
    "4386": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4387": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1776"
    },
    "4390": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x22"
    },
    "4392": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4393": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "4394": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4396": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "13"
    },
    "4397": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4398": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "POP",
      "path": "13"
    },
    "4399": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "POP",
      "path": "13"
    },
    "4400": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4402": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4403": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4404": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4405": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SUB",
      "path": "13"
    },
    "4406": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4407": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4408": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4409": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4602
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 59
    },
    "4410": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4412": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4610
      ],
      "op": "ADD",
      "path": "13"
    },
    "4413": {
      "fn": "EnumerableSet._at",
      "offset": [
        4611,
        4616
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4414": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4415": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4416": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4417": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "LT",
      "path": "13"
    },
    "4418": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1147"
    },
    "4421": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4422": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "INVALID",
      "path": "13"
    },
    "4423": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4424": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4425": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4427": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4428": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4430": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4432": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "4433": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "ADD",
      "path": "13"
    },
    "4434": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4435": {
      "fn": "EnumerableSet._at",
      "offset": [
        4592,
        4617
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4436": {
      "fn": "EnumerableSet._at",
      "offset": [
        4592,
        4617
      ],
      "op": "POP",
      "path": "13"
    },
    "4437": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4438": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4439": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "POP",
      "path": "13"
    },
    "4440": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "POP",
      "path": "13"
    },
    "4441": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4423,
        4624
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4442": {
      "fn": "EnumerableMap._at",
      "offset": [
        4934,
        5208
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4443": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5056
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 60
    },
    "4444": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5056
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4445": {
      "fn": "EnumerableMap._at",
      "offset": [
        5001,
        5008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4447": {
      "fn": "EnumerableMap._at",
      "offset": [
        5001,
        5008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4448": {
      "fn": "EnumerableMap._at",
      "offset": [
        5001,
        5008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4449": {
      "fn": "EnumerableMap._at",
      "offset": [
        5001,
        5008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4450": {
      "branch": 105,
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5064
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4451": {
      "op": "LT"
    },
    "4452": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x119E"
    },
    "4455": {
      "branch": 105,
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4456": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4458": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4467": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4468": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4470": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "ADD",
      "path": "12"
    },
    "4471": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4472": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4473": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4475": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "ADD",
      "path": "12"
    },
    "4476": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4477": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4478": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "SUB",
      "path": "12"
    },
    "4479": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4480": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4481": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "4483": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4484": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4485": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4487": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "ADD",
      "path": "12"
    },
    "4488": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4489": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18A5"
    },
    "4492": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "4494": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4495": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "4496": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4498": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "ADD",
      "path": "12"
    },
    "4499": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4500": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "POP",
      "path": "12"
    },
    "4501": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "POP",
      "path": "12"
    },
    "4502": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4504": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4505": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4506": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4507": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "SUB",
      "path": "12"
    },
    "4508": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4509": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4510": {
      "fn": "EnumerableMap._at",
      "offset": [
        5029,
        5103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4511": {
      "fn": "EnumerableMap._at",
      "offset": [
        5114,
        5136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4513": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5142
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4514": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5151
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4516": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5151
      ],
      "op": "ADD",
      "path": "12"
    },
    "4517": {
      "fn": "EnumerableMap._at",
      "offset": [
        5152,
        5157
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4518": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4519": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4520": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4521": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "LT",
      "path": "12"
    },
    "4522": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11AF"
    },
    "4525": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4526": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "INVALID",
      "path": "12"
    },
    "4527": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4528": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4529": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4531": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4532": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4534": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4536": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4537": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4538": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4540": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "MUL",
      "path": "12"
    },
    "4541": {
      "fn": "EnumerableMap._at",
      "offset": [
        5139,
        5158
      ],
      "op": "ADD",
      "path": "12"
    },
    "4542": {
      "fn": "EnumerableMap._at",
      "offset": [
        5114,
        5158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4543": {
      "fn": "EnumerableMap._at",
      "offset": [
        5114,
        5158
      ],
      "op": "POP",
      "path": "12"
    },
    "4544": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5181
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 61
    },
    "4545": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5186
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4547": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5186
      ],
      "op": "ADD",
      "path": "12"
    },
    "4548": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5186
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4549": {
      "fn": "EnumerableMap._at",
      "offset": [
        5188,
        5193
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4550": {
      "fn": "EnumerableMap._at",
      "offset": [
        5188,
        5200
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4552": {
      "fn": "EnumerableMap._at",
      "offset": [
        5188,
        5200
      ],
      "op": "ADD",
      "path": "12"
    },
    "4553": {
      "fn": "EnumerableMap._at",
      "offset": [
        5188,
        5200
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4554": {
      "fn": "EnumerableMap._at",
      "offset": [
        5168,
        5201
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4555": {
      "fn": "EnumerableMap._at",
      "offset": [
        5168,
        5201
      ],
      "op": "POP",
      "path": "12"
    },
    "4556": {
      "fn": "EnumerableMap._at",
      "offset": [
        5168,
        5201
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4557": {
      "fn": "EnumerableMap._at",
      "offset": [
        5168,
        5201
      ],
      "op": "POP",
      "path": "12"
    },
    "4558": {
      "fn": "EnumerableMap._at",
      "offset": [
        5168,
        5201
      ],
      "op": "POP",
      "path": "12"
    },
    "4559": {
      "fn": "EnumerableMap._at",
      "offset": [
        4934,
        5208
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4560": {
      "fn": "EnumerableMap._at",
      "offset": [
        4934,
        5208
      ],
      "op": "POP",
      "path": "12"
    },
    "4561": {
      "fn": "EnumerableMap._at",
      "offset": [
        4934,
        5208
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4562": {
      "fn": "EnumerableMap._at",
      "offset": [
        4934,
        5208
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4563": {
      "fn": "EnumerableMap._at",
      "offset": [
        4934,
        5208
      ],
      "op": "POP",
      "path": "12"
    },
    "4564": {
      "fn": "EnumerableMap._at",
      "jump": "o",
      "offset": [
        4934,
        5208
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4565": {
      "fn": "EnumerableMap._get",
      "offset": [
        5615,
        5930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4566": {
      "fn": "EnumerableMap._get",
      "offset": [
        5709,
        5716
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4568": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4569": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4570": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4571": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4573": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5759
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4574": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5759
      ],
      "op": "ADD",
      "path": "12"
    },
    "4575": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4577": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4578": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4580": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4581": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4582": {
      "fn": "EnumerableMap._get",
      "offset": [
        5747,
        5764
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4583": {
      "fn": "EnumerableMap._get",
      "offset": [
        5797,
        5809
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 62
    },
    "4584": {
      "branch": 106,
      "fn": "EnumerableMap._get",
      "offset": [
        5782,
        5795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4585": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1270"
    },
    "4588": {
      "branch": 106,
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4589": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4591": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4600": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4601": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4603": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4604": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4605": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4606": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4608": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4609": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4610": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4611": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SUB",
      "path": "12"
    },
    "4612": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4613": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4614": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4615": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4616": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4617": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4618": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4619": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4620": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4622": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4623": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4624": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4625": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4626": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4627": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4628": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4630": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4631": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4632": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4633": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4634": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4635": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4637": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4638": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4639": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4640": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "LT",
      "path": "12"
    },
    "4641": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4642": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1235"
    },
    "4645": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4646": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4647": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4648": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4649": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4650": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4651": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4652": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4653": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4654": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4656": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4657": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x121D"
    },
    "4660": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4661": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4662": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4663": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4664": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4665": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4666": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4667": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4668": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4669": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4670": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4671": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4672": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4674": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "AND",
      "path": "12"
    },
    "4675": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4676": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4677": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1262"
    },
    "4680": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4681": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4682": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4683": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SUB",
      "path": "12"
    },
    "4684": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4685": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4686": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4688": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4689": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4691": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SUB",
      "path": "12"
    },
    "4692": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "4695": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "EXP",
      "path": "12"
    },
    "4696": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SUB",
      "path": "12"
    },
    "4697": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "NOT",
      "path": "12"
    },
    "4698": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "AND",
      "path": "12"
    },
    "4699": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4700": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4701": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4703": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4704": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4705": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4706": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4707": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4708": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4709": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4710": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4711": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4712": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4714": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4715": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4716": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4717": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SUB",
      "path": "12"
    },
    "4718": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4719": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4720": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4721": {
      "fn": "EnumerableMap._get",
      "offset": [
        5774,
        5810
      ],
      "op": "POP",
      "path": "12"
    },
    "4722": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5866
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 63
    },
    "4723": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5875
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4725": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5875
      ],
      "op": "ADD",
      "path": "12"
    },
    "4726": {
      "fn": "EnumerableMap._get",
      "offset": [
        5887,
        5888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4728": {
      "fn": "EnumerableMap._get",
      "offset": [
        5876,
        5884
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4729": {
      "fn": "EnumerableMap._get",
      "offset": [
        5876,
        5888
      ],
      "op": "SUB",
      "path": "12"
    },
    "4730": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4731": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4732": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4733": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "LT",
      "path": "12"
    },
    "4734": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1283"
    },
    "4737": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4738": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "INVALID",
      "path": "12"
    },
    "4739": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4740": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4741": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4743": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4744": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4746": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4748": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4749": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4750": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4752": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "MUL",
      "path": "12"
    },
    "4753": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5889
      ],
      "op": "ADD",
      "path": "12"
    },
    "4754": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5896
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4756": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5896
      ],
      "op": "ADD",
      "path": "12"
    },
    "4757": {
      "fn": "EnumerableMap._get",
      "offset": [
        5863,
        5896
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4758": {
      "fn": "EnumerableMap._get",
      "offset": [
        5856,
        5896
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4759": {
      "fn": "EnumerableMap._get",
      "offset": [
        5856,
        5896
      ],
      "op": "POP",
      "path": "12"
    },
    "4760": {
      "fn": "EnumerableMap._get",
      "offset": [
        5856,
        5896
      ],
      "op": "POP",
      "path": "12"
    },
    "4761": {
      "fn": "EnumerableMap._get",
      "offset": [
        5615,
        5930
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4762": {
      "fn": "EnumerableMap._get",
      "offset": [
        5615,
        5930
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4763": {
      "fn": "EnumerableMap._get",
      "offset": [
        5615,
        5930
      ],
      "op": "POP",
      "path": "12"
    },
    "4764": {
      "fn": "EnumerableMap._get",
      "offset": [
        5615,
        5930
      ],
      "op": "POP",
      "path": "12"
    },
    "4765": {
      "fn": "EnumerableMap._get",
      "offset": [
        5615,
        5930
      ],
      "op": "POP",
      "path": "12"
    },
    "4766": {
      "fn": "EnumerableMap._get",
      "jump": "o",
      "offset": [
        5615,
        5930
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4767": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15413,
        15417
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15438,
        15453
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12B3"
    },
    "4773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15438,
        15440
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4780": {
      "op": "SHL"
    },
    "4781": {
      "op": "SUB"
    },
    "4782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15438,
        15451
      ],
      "op": "AND",
      "path": "5"
    },
    "4783": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15438,
        15451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C6"
    },
    "4786": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15438,
        15453
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4787": {
      "branch": 101,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15438,
        15453
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15433,
        15491
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12BF"
    },
    "4791": {
      "branch": 101,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15433,
        15491
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4792": {
      "op": "POP"
    },
    "4793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15476,
        15480
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 64,
      "value": "0x1"
    },
    "4795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15469,
        15480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF8"
    },
    "4798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15469,
        15480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15433,
        15491
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15500,
        15523
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13CD"
    },
    "4805": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4812": {
      "op": "SHL"
    },
    "4813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15637,
        15649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12D4"
    },
    "4816": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15637,
        15647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDF"
    },
    "4819": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15637,
        15649
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4820": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15637,
        15649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15663,
        15667
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15681,
        15688
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15702,
        15707
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "op": "SUB"
    },
    "4840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "AND",
      "path": "5"
    },
    "4841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4853": {
      "op": "SHL"
    },
    "4854": {
      "op": "SUB"
    },
    "4855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "AND",
      "path": "5"
    },
    "4856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SUB",
      "path": "5"
    },
    "4874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "LT",
      "path": "5"
    },
    "4903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x133B"
    },
    "4907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1323"
    },
    "4922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "AND",
      "path": "5"
    },
    "4937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1368"
    },
    "4942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SUB",
      "path": "5"
    },
    "4946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SUB",
      "path": "5"
    },
    "4954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "EXP",
      "path": "5"
    },
    "4958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SUB",
      "path": "5"
    },
    "4959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "NOT",
      "path": "5"
    },
    "4960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "AND",
      "path": "5"
    },
    "4961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "4966": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "4977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SUB",
      "path": "5"
    },
    "4985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SUB",
      "path": "5"
    },
    "4986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4999": {
      "op": "SHL"
    },
    "5000": {
      "op": "SUB"
    },
    "5001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "NOT",
      "path": "5"
    },
    "5002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "AND",
      "path": "5"
    },
    "5003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "ADD",
      "path": "5"
    },
    "5007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5015": {
      "op": "SHL"
    },
    "5016": {
      "op": "SUB"
    },
    "5017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5020": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "AND",
      "path": "5"
    },
    "5021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "OR",
      "path": "5"
    },
    "5022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "5025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "5026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "5027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15542,
        15717
      ],
      "op": "POP",
      "path": "5"
    },
    "5028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "ADD",
      "path": "5"
    },
    "5035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "5041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "ADD",
      "path": "5"
    },
    "5046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1798"
    },
    "5049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "5051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "SUB"
    },
    "5061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15541
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15541
      ],
      "op": "AND",
      "path": "5"
    },
    "5063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15541
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15541
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15FF"
    },
    "5068": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15526,
        15772
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15526,
        15772
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15500,
        15772
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15500,
        15772
      ],
      "op": "POP",
      "path": "5"
    },
    "5072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15782,
        15795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15809,
        15819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "ADD",
      "path": "5"
    },
    "5079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "LT",
      "path": "5"
    },
    "5085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E6"
    },
    "5089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5092": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5095": {
      "op": "POP"
    },
    "5096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15798,
        15830
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5103": {
      "op": "SHL"
    },
    "5104": {
      "op": "SUB"
    },
    "5105": {
      "op": "NOT"
    },
    "5106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15848,
        15874
      ],
      "op": "AND",
      "path": "5",
      "statement": 65
    },
    "5107": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15848,
        15874
      ],
      "op": "EQ",
      "path": "5"
    },
    "5116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15848,
        15874
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5117": {
      "op": "POP"
    },
    "5118": {
      "op": "POP"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "POP",
      "path": "5"
    },
    "5123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "POP",
      "path": "5"
    },
    "5124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "POP",
      "path": "5"
    },
    "5125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15293,
        15882
      ],
      "op": "POP",
      "path": "5"
    },
    "5126": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        15293,
        15882
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5127": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4270,
        4393
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5128": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4341,
        4345
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5130": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 66
    },
    "5131": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5132": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5133": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4376
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5135": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4376
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5136": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4376
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5137": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4376
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5138": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4376
      ],
      "op": "ADD",
      "path": "12"
    },
    "5139": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5141": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5142": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5144": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5145": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5146": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4381
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5147": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4386
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5148": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4386
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5149": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4364,
        4386
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5150": {
      "fn": "EnumerableMap._contains",
      "jump": "o",
      "offset": [
        4270,
        4393
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5151": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2183,
        3695
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5152": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2249,
        2253
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5154": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5155": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5156": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5157": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5159": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5160": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "ADD",
      "path": "13"
    },
    "5161": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5163": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5164": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5166": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5167": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5168": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5169": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2420,
        2435
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5170": {
      "branch": 109,
      "fn": "EnumerableSet._remove",
      "offset": [
        2420,
        2435
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5171": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14DB"
    },
    "5174": {
      "branch": 109,
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5175": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2867
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5176": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2867
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5179": {
      "op": "NOT"
    },
    "5180": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5181": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5182": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "ADD",
      "path": "13"
    },
    "5183": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5184": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5185": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5186": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "ADD",
      "path": "13"
    },
    "5187": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5188": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2777,
        2798
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5190": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2777,
        2798
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5191": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2852
      ],
      "op": "DUP8",
      "path": "13"
    },
    "5192": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2852
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5193": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5194": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5195": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5196": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "LT",
      "path": "13"
    },
    "5197": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1452"
    },
    "5200": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5201": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "INVALID",
      "path": "13"
    },
    "5202": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5203": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5204": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5206": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5207": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5209": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5211": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5212": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "ADD",
      "path": "13"
    },
    "5213": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5214": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3111,
        3153
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5215": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3111,
        3153
      ],
      "op": "POP",
      "path": "13"
    },
    "5216": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3283
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 67
    },
    "5217": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3248
      ],
      "op": "DUP8",
      "path": "13"
    },
    "5218": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3256
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5220": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3256
      ],
      "op": "ADD",
      "path": "13"
    },
    "5221": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5222": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5223": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5224": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5225": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "LT",
      "path": "13"
    },
    "5226": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x146F"
    },
    "5229": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5230": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "INVALID",
      "path": "13"
    },
    "5231": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5232": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5234": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5235": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5236": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5237": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5239": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5240": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5241": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5242": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5243": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5244": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "ADD",
      "path": "13"
    },
    "5245": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "5246": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5247": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "5248": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5249": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 68
    },
    "5250": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5251": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5252": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3391,
        3392
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5254": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP10",
      "path": "13"
    },
    "5255": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5256": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "ADD",
      "path": "13"
    },
    "5257": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5258": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "5259": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5260": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5262": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5263": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5264": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5265": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5266": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "ADD",
      "path": "13"
    },
    "5267": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3392
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5268": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3392
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5269": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP7",
      "path": "13",
      "statement": 69
    },
    "5270": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5271": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3352
      ],
      "op": "DUP8",
      "path": "13"
    },
    "5272": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3352
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5273": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5274": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x149F"
    },
    "5277": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5278": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "INVALID",
      "path": "13"
    },
    "5279": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5280": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5282": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5283": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SUB",
      "path": "13"
    },
    "5284": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5285": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5286": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5287": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5289": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5290": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5292": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5294": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5295": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "ADD",
      "path": "13"
    },
    "5296": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5298": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5299": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5300": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5301": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5302": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3593
      ],
      "op": "DUP7",
      "path": "13",
      "statement": 70
    },
    "5303": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5305": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "13"
    },
    "5306": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5308": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3603,
        3608
      ],
      "op": "DUP8",
      "path": "13"
    },
    "5309": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5310": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5311": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5313": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "ADD",
      "path": "13"
    },
    "5314": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5315": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5316": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5317": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5319": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "ADD",
      "path": "13"
    },
    "5320": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5322": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5323": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5325": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5326": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5327": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3631,
        3635
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 71,
      "value": "0x1"
    },
    "5329": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "5330": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "13"
    },
    "5331": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "13"
    },
    "5332": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "13"
    },
    "5333": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "13"
    },
    "5334": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "13"
    },
    "5335": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x713"
    },
    "5338": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5339": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5340": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3673,
        3678
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 72,
      "value": "0x0"
    },
    "5342": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5343": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "POP",
      "path": "13"
    },
    "5344": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "POP",
      "path": "13"
    },
    "5345": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x713"
    },
    "5348": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5349": {
      "fn": "EnumerableSet._add",
      "offset": [
        1611,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5350": {
      "fn": "EnumerableSet._add",
      "offset": [
        1674,
        1678
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5352": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1716
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F1"
    },
    "5355": {
      "fn": "EnumerableSet._add",
      "offset": [
        1705,
        1708
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5356": {
      "fn": "EnumerableSet._add",
      "offset": [
        1710,
        1715
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5357": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1704
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1407"
    },
    "5360": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1695,
        1716
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5361": {
      "branch": 110,
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1716
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5362": {
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1527"
    },
    "5365": {
      "branch": 110,
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 73
    },
    "5368": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5369": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5371": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5372": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5373": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "ADD",
      "path": "13"
    },
    "5374": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5375": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5376": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1743
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5378": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5379": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5380": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5381": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5383": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5384": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5385": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5386": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5387": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "5388": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "ADD",
      "path": "13"
    },
    "5389": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5390": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5391": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5392": {
      "fn": "EnumerableSet._add",
      "offset": [
        1912,
        1930
      ],
      "op": "DUP5",
      "path": "13",
      "statement": 74
    },
    "5393": {
      "fn": "EnumerableSet._add",
      "offset": [
        1912,
        1930
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5394": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5395": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5396": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5397": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5398": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "DUP7",
      "path": "13"
    },
    "5399": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "ADD",
      "path": "13"
    },
    "5400": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5401": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "5402": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5403": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5405": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5406": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5407": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5408": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5409": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5410": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5411": {
      "fn": "EnumerableSet._add",
      "offset": [
        1944,
        1955
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 75,
      "value": "0x713"
    },
    "5414": {
      "fn": "EnumerableSet._add",
      "offset": [
        1944,
        1955
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5415": {
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5416": {
      "op": "POP"
    },
    "5417": {
      "fn": "EnumerableSet._add",
      "offset": [
        1993,
        1998
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 76,
      "value": "0x0"
    },
    "5419": {
      "fn": "EnumerableSet._add",
      "offset": [
        1986,
        1998
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x713"
    },
    "5422": {
      "fn": "EnumerableSet._add",
      "offset": [
        1986,
        1998
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5423": {
      "fn": "EnumerableMap._set",
      "offset": [
        1828,
        2506
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5424": {
      "fn": "EnumerableMap._set",
      "offset": [
        1904,
        1908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5426": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5427": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5428": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5429": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2049
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5431": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2049
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5432": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2049
      ],
      "op": "ADD",
      "path": "12"
    },
    "5433": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5435": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5436": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5438": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5439": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5440": {
      "fn": "EnumerableMap._set",
      "offset": [
        2037,
        2054
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5441": {
      "branch": 107,
      "fn": "EnumerableMap._set",
      "offset": [
        2069,
        2082
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5442": {
      "fn": "EnumerableMap._set",
      "offset": [
        2065,
        2500
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1594"
    },
    "5445": {
      "branch": 107,
      "fn": "EnumerableMap._set",
      "offset": [
        2065,
        2500
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5446": {
      "op": "POP"
    },
    "5447": {
      "op": "POP"
    },
    "5448": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 77,
      "value": "0x40"
    },
    "5450": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5451": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5452": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5453": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5454": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "ADD",
      "path": "12"
    },
    "5455": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5456": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5457": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5458": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5459": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5460": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5462": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5463": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5464": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "ADD",
      "path": "12"
    },
    "5465": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5466": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5467": {
      "fn": "EnumerableMap._set",
      "offset": [
        2153,
        2191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5468": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5469": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5470": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5472": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5473": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5474": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "ADD",
      "path": "12"
    },
    "5475": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5476": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5477": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2147
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5479": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5480": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5481": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5482": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5483": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5484": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5485": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5486": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5487": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5489": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5490": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5491": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "MUL",
      "path": "12"
    },
    "5492": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5493": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5494": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "ADD",
      "path": "12"
    },
    "5495": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5496": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5497": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5498": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5499": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5500": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5501": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5502": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "ADD",
      "path": "12"
    },
    "5503": {
      "fn": "EnumerableMap._set",
      "offset": [
        2135,
        2192
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5504": {
      "fn": "EnumerableMap._set",
      "offset": [
        2347,
        2366
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 78
    },
    "5505": {
      "fn": "EnumerableMap._set",
      "offset": [
        2347,
        2366
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5506": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5507": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5508": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5509": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2339
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5510": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2339
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5511": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2339
      ],
      "op": "ADD",
      "path": "12"
    },
    "5512": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5513": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5514": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5515": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5516": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5517": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5518": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2344
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5519": {
      "fn": "EnumerableMap._set",
      "offset": [
        2327,
        2366
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5520": {
      "fn": "EnumerableMap._set",
      "offset": [
        2380,
        2391
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 79,
      "value": "0xF84"
    },
    "5523": {
      "fn": "EnumerableMap._set",
      "offset": [
        2380,
        2391
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5524": {
      "fn": "EnumerableMap._set",
      "offset": [
        2065,
        2500
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5525": {
      "fn": "EnumerableMap._set",
      "offset": [
        2458,
        2463
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 80
    },
    "5526": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2425
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5527": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5529": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2434
      ],
      "op": "ADD",
      "path": "12"
    },
    "5530": {
      "fn": "EnumerableMap._set",
      "offset": [
        2446,
        2447
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5532": {
      "fn": "EnumerableMap._set",
      "offset": [
        2435,
        2443
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5533": {
      "fn": "EnumerableMap._set",
      "offset": [
        2435,
        2447
      ],
      "op": "SUB",
      "path": "12"
    },
    "5534": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5535": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5536": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5537": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "LT",
      "path": "12"
    },
    "5538": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15A7"
    },
    "5541": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5542": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5543": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5544": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5545": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5547": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5548": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5550": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5552": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5553": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5554": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5556": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "MUL",
      "path": "12"
    },
    "5557": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2448
      ],
      "op": "ADD",
      "path": "12"
    },
    "5558": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2455
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5560": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2455
      ],
      "op": "ADD",
      "path": "12"
    },
    "5561": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2463
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5562": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2463
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5563": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2463
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5564": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2463
      ],
      "op": "POP",
      "path": "12"
    },
    "5565": {
      "fn": "EnumerableMap._set",
      "offset": [
        2484,
        2489
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 81,
      "value": "0x0"
    },
    "5567": {
      "fn": "EnumerableMap._set",
      "offset": [
        2477,
        2489
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5568": {
      "fn": "EnumerableMap._set",
      "offset": [
        2477,
        2489
      ],
      "op": "POP",
      "path": "12"
    },
    "5569": {
      "fn": "EnumerableMap._set",
      "offset": [
        2477,
        2489
      ],
      "op": "POP",
      "path": "12"
    },
    "5570": {
      "fn": "EnumerableMap._set",
      "offset": [
        2477,
        2489
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF84"
    },
    "5573": {
      "fn": "EnumerableMap._set",
      "offset": [
        2477,
        2489
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5574": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1328
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5575": {
      "fn": "Address.isContract",
      "offset": [
        778,
        782
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5577": {
      "fn": "Address.isContract",
      "offset": [
        1239,
        1259
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5578": {
      "fn": "Address.isContract",
      "offset": [
        1239,
        1259
      ],
      "op": "EXTCODEHASH",
      "path": "10"
    },
    "5579": {
      "fn": "Address.isContract",
      "offset": [
        1084,
        1150
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "5612": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 82
    },
    "5613": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5614": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "EQ",
      "path": "10"
    },
    "5615": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5616": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5617": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5618": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1320
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF8"
    },
    "5621": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1320
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5622": {
      "op": "POP"
    },
    "5623": {
      "op": "POP"
    },
    "5624": {
      "fn": "Address.isContract",
      "offset": [
        1305,
        1320
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5625": {
      "fn": "Address.isContract",
      "offset": [
        1305,
        1320
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5626": {
      "fn": "Address.isContract",
      "offset": [
        1305,
        1320
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5627": {
      "fn": "Address.isContract",
      "offset": [
        1270,
        1321
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5628": {
      "op": "POP"
    },
    "5629": {
      "op": "POP"
    },
    "5630": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1328
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5631": {
      "fn": "Address.functionCall",
      "offset": [
        3770,
        3964
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5632": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5634": {
      "fn": "Address.functionCall",
      "offset": [
        3904,
        3957
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 83,
      "value": "0xF81"
    },
    "5637": {
      "fn": "Address.functionCall",
      "offset": [
        3927,
        3933
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5638": {
      "fn": "Address.functionCall",
      "offset": [
        3935,
        3939
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5639": {
      "fn": "Address.functionCall",
      "offset": [
        3941,
        3942
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5641": {
      "fn": "Address.functionCall",
      "offset": [
        3944,
        3956
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5642": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5247,
        5259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5644": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5279,
        5297
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 84,
      "value": "0x1614"
    },
    "5647": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5290,
        5296
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5648": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5279,
        5289
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15C6"
    },
    "5651": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5279,
        5297
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5652": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5279,
        5297
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5653": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1665"
    },
    "5656": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5657": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5659": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5660": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5667": {
      "op": "SHL"
    },
    "5668": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5669": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5670": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5672": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5674": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5675": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "10"
    },
    "5676": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5677": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1D"
    },
    "5679": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "5681": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5682": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "10"
    },
    "5683": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5684": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5717": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "5719": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5720": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "10"
    },
    "5721": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5722": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5723": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5724": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5725": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5726": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5727": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SUB",
      "path": "10"
    },
    "5728": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "5730": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "10"
    },
    "5731": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5732": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5733": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5734": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5402,
        5414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5736": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5416,
        5439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5737": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5744": {
      "op": "SHL"
    },
    "5745": {
      "op": "SUB"
    },
    "5746": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5454
      ],
      "op": "AND",
      "path": "10"
    },
    "5747": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5463,
        5471
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5748": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5474,
        5478
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5749": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5751": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5752": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5753": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5754": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5755": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5756": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5757": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5759": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5760": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5761": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5762": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5763": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5764": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5765": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5767": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5768": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "LT",
      "path": "10"
    },
    "5769": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A3"
    },
    "5772": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5773": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5774": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5775": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5776": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5779": {
      "op": "NOT"
    },
    "5780": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5781": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5782": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5783": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5784": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5786": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5787": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5788": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5789": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5790": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5791": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1684"
    },
    "5794": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5795": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5796": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5798": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5799": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5801": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SUB",
      "path": "10"
    },
    "5802": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "5805": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "EXP",
      "path": "10"
    },
    "5806": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SUB",
      "path": "10"
    },
    "5807": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5808": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "NOT",
      "path": "10"
    },
    "5809": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5810": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5811": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "AND",
      "path": "10"
    },
    "5812": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5813": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5814": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5815": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "AND",
      "path": "10"
    },
    "5816": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5817": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5818": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "OR",
      "path": "10"
    },
    "5819": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5820": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5821": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5822": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5823": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5824": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5825": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5826": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5827": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5828": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5829": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5830": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5831": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5832": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5833": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5835": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5837": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5838": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5839": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5840": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SUB",
      "path": "10"
    },
    "5841": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5842": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5843": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5844": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "GAS",
      "path": "10"
    },
    "5845": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "CALL",
      "path": "10"
    },
    "5846": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5847": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5848": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5849": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5850": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5851": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5852": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5854": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5855": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "EQ",
      "path": "10"
    },
    "5856": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1705"
    },
    "5859": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5860": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5862": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5863": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5864": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5865": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "5867": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "NOT",
      "path": "10"
    },
    "5868": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "5870": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5871": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5872": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "AND",
      "path": "10"
    },
    "5873": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5874": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5875": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5877": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5878": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5879": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5880": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5881": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5882": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5884": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5886": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5887": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "10"
    },
    "5888": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "5889": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x170A"
    },
    "5892": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5893": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5894": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5896": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5897": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5898": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5899": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5900": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5901": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5902": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5903": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "POP",
      "path": "10"
    },
    "5904": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5493,
        5500
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5905": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5906": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x171E"
    },
    "5909": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5910": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5523,
        5533
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 85
    },
    "5911": {
      "op": "POP"
    },
    "5912": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5516,
        5533
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF8"
    },
    "5915": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5516,
        5533
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5516,
        5533
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5918": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5919": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5634,
        5651
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5920": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5634,
        5651
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5921": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5634,
        5655
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5922": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5630,
        6059
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172E"
    },
    "5925": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5630,
        6059
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5926": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5892,
        5902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5927": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5886,
        5903
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5928": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5952,
        5967
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5929": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5939,
        5949
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5930": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5935,
        5937
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5932": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5931,
        5950
      ],
      "op": "ADD",
      "path": "10"
    },
    "5933": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5924,
        5968
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5934": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5841,
        5986
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5935": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 86,
      "value": "0x40"
    },
    "5937": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5944": {
      "op": "SHL"
    },
    "5945": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5946": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5947": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5949": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5951": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5952": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "5953": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5954": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5955": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5956": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5957": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5958": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "5960": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5961": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "5962": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5963": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5964": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5965": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6031,
        6043
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5966": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6031,
        6043
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5967": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5968": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5969": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5970": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5971": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "5973": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "5974": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5975": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5976": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5977": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "5978": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5979": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5980": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5981": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5982": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5984": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5985": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5986": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1235"
    },
    "5989": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5990": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5991": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5992": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "5993": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5994": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5995": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5996": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "5997": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5998": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6000": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "10"
    },
    "6001": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x121D"
    },
    "6004": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "JUMP",
      "path": "10"
    }
  },
  "sha1": "90342c19ab756d03325ea6549453a31e7849c727",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC721.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./IERC721Enumerable.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"../../introspection/ERC165.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/EnumerableSet.sol\";\nimport \"../../utils/EnumerableMap.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n    using SafeMath for uint256;\n    using Address for address;\n    using EnumerableSet for EnumerableSet.UintSet;\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\n    using Strings for uint256;\n\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\n\n    // Mapping from holder address to their (enumerable) set of owned tokens\n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n\n    // Enumerable mapping from token ids to their owners\n    EnumerableMap.UintToAddressMap private _tokenOwners;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Optional mapping for token URIs\n    mapping (uint256 => string) private _tokenURIs;\n\n    // Base URI\n    string private _baseURI;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\n     *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\n     *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\n     *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\n     *\n     *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\n     *        0xa22cb465 ^ 0xe985e9c5 ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /*\n     *     bytes4(keccak256('totalSupply()')) == 0x18160ddd\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59\n     *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7\n     *\n     *     => 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name, string memory symbol) {\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721);\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n\n        return _holderTokens[owner].length();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return _tokenOwners.get(tokenId, \"ERC721: owner query for nonexistent token\");\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n\n        // If there is no base URI, return the token URI.\n        if (bytes(_baseURI).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, _tokenURI));\n        }\n        // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\n        return string(abi.encodePacked(_baseURI, tokenId.toString()));\n    }\n\n    /**\n    * @dev Returns the base URI set via {_setBaseURI}. This will be\n    * automatically added as a prefix in {tokenURI} to each token's URI, or\n    * to the token ID if no specific URI is set for that token ID.\n    */\n    function baseURI() public view returns (string memory) {\n        return _baseURI;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view override returns (uint256) {\n        return _holderTokens[owner].at(index);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // _tokenOwners are indexed by tokenIds, so .length() returns the number of tokenIds\n        return _tokenOwners.length();\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view override returns (uint256) {\n        (uint256 tokenId, ) = _tokenOwners.at(index);\n        return tokenId;\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mecanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _tokenOwners.contains(tokenId);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     d*\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        // Clear metadata (if any)\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n\n        _holderTokens[owner].remove(tokenId);\n\n        _tokenOwners.remove(tokenId);\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _holderTokens[from].remove(tokenId);\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721Metadata: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Internal function to set the base URI for all token IDs. It is\n     * automatically added as a prefix to the value returned in {tokenURI},\n     * or to the token ID if {tokenURI} is empty.\n     */\n    function _setBaseURI(string memory baseURI_) internal virtual {\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (!to.isContract()) {\n            return true;\n        }\n        bytes memory returndata = to.functionCall(abi.encodeWithSelector(\n            IERC721Receiver(to).onERC721Received.selector,\n            _msgSender(),\n            from,\n            tokenId,\n            _data\n        ), \"ERC721: transfer to non ERC721Receiver implementer\");\n        bytes4 retval = abi.decode(returndata, (bytes4));\n        return (retval == _ERC721_RECEIVED);\n    }\n\n    function _approve(address to, uint256 tokenId) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "561:16173:5:-:0;;;3567:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3567:358:5;;;;;;;;;;-1:-1:-1;3567:358:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3567:358:5;;;;;;;;;;-1:-1:-1;3567:358:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3567:358:5;;-1:-1:-1;742:40:2;;-1:-1:-1;;;;761:20:2;-1:-1:-1;742:18:2;:40::i;:::-;3632:12:5;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3654:16:5;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3758:40:5;-1:-1:-1;;;3758:18:5;:40::i;:::-;3808:49;-1:-1:-1;;;3808:18:5;:49::i;:::-;3867:51;-1:-1:-1;;;3867:18:5;:51::i;:::-;3567:358;;561:16173;;1473:198:2;-1:-1:-1;;;;;;1556:25:2;;;;;1548:66;;;;;-1:-1:-1;;;1548:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1624:33:2;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1624:40:2;1660:4;1624:40;;;1473:198::o;561:16173:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:16173:5;;;-1:-1:-1;561:16173:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "/Users/mayankjain/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0-solc-0.7/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}